apply plugin: 'java'
apply plugin: 'eclipse'

project.ext.lwjglVersion = "3.1.5"
project.ext.natives = "natives-linux"

repositories {
    mavenCentral()
}

test {
    testLogging{
        showStandardStreams = true
        testLogging.exceptionFormat = 'full'
    }
}


dependencies {
    compile "org.lwjgl:lwjgl:${lwjglVersion}"
    compile "org.lwjgl:lwjgl-glfw:${lwjglVersion}"
    compile "org.lwjgl:lwjgl-opengl:${lwjglVersion}"
    compile "org.joml:joml:1.9.6"
    compile "org.lwjgl:lwjgl:${lwjglVersion}:${natives}"
    compile "org.lwjgl:lwjgl-glfw:${lwjglVersion}:${natives}"
    compile "org.lwjgl:lwjgl-opengl:${lwjglVersion}:${natives}"
    compile "org.ejml:ejml-dsparse:0.32"
    compile "org.ejml:ejml-simple:0.32"
    compile "junit:junit:4.12"
    compile "org.apache.logging.log4j:log4j-core:2.10.0"
    compile "org.apache.logging.log4j:log4j-api:2.10.0"
}


task runApp(type: JavaExec) {
    dependsOn classes
    dependsOn eclipseClasspath
    jvmArgs "-Dorg.lwjgl.util.DebugLoader=true", "-ea"
    classpath sourceSets.main.runtimeClasspath
    main = 'main.Main'
    /*println(commandLine)*/
    /*File f = file(".classpath")
    f.write((sourceSets.main.runtimeClasspath
             + configurations.testCompile).asPath)*/
}

jar {
    from {
        (configurations.runtime).collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
    manifest {
        attributes("Main-Class": "main.Main" )
    }
}

test {
    filter {
        /* includeTestsMatching "physics.CellGridTests.fourOnFourStretching" */
        /*includeTestsMatching "physics.CellGridTests.slurp"*/
        /* includeTestsMatching "physics.TwoCellTests.beamOscillationRotation" */
        /* includeTestsMatching "physics.TwoCellTests.dampedSymmetricRotationOscillation" */
        /*includeTestsMatching "physics.TwoCellTests.dampedAbsoluteRotation"*/
        /* includeTestsMatching "physics.TwoCellTests.symmetricRotationOscillation" */
        includeTestsMatching "physics.TwoCellTests.*"
        /* includeTestsMatching "physics.TwoCellTests.testotesto" */
        /* includeTestsMatching "physics.TwoCellTests.externalForce" */
        /* includeTestsMatching "physics.CellGridTests.*" */
        /* includeTestsMatching "*" */
    }
}
