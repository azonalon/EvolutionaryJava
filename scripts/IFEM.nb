(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    252232,       5075]
NotebookOptionsPosition[    249058,       4976]
NotebookOutlinePosition[    249392,       4991]
CellTagsIndexPosition[    249349,       4988]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.72406148161369*^9, 3.7240615117839203`*^9}, {
   3.724061542729702*^9, 3.72406164169536*^9}, {3.724223485452938*^9, 
   3.724223486471508*^9}, 3.724315563692789*^9}],

Cell[CellGroupData[{

Cell["Determinant and Volume", "Subsection",
 CellChangeTimes->{{3.724223477856329*^9, 3.72422348152745*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Ds3D", "=", 
   RowBox[{
    RowBox[{"(", GridBox[{
       {
        RowBox[{"x1", "-", "x4"}], 
        RowBox[{"x2", "-", "x4"}], 
        RowBox[{"x3", "-", "x4"}]},
       {
        RowBox[{"y1", "-", "y4"}], 
        RowBox[{"y2", "-", "y4"}], 
        RowBox[{"y3", "-", "y4"}]},
       {
        RowBox[{"z1", "-", "z4"}], 
        RowBox[{"z2", "-", "z4"}], 
        RowBox[{"z3", "-", "z4"}]}
      }], ")"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"z4", "\[Rule]", 
       RowBox[{
        RowBox[{"-", "z1"}], "-", "z2", "-", "z3"}]}], ",", 
      RowBox[{"y4", "\[Rule]", 
       RowBox[{
        RowBox[{"-", "y1"}], "-", "y2", "-", "y3"}]}], ",", 
      RowBox[{"x4", "\[Rule]", 
       RowBox[{
        RowBox[{"-", "x1"}], "-", "x2", "-", "x3"}]}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ds2D", "=", 
   RowBox[{"(", GridBox[{
      {
       RowBox[{"x1", "-", "x3"}], 
       RowBox[{"x2", "-", "x3"}]},
      {
       RowBox[{"y1", "-", "y3"}], 
       RowBox[{"y2", "-", "y3"}]}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", 
   SqrtBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"x3", "-", "x1"}], ")"}], "2"], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"y3", "-", "y1"}], ")"}], "2"]}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b", "=", 
   SqrtBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"x3", "-", "x2"}], ")"}], "2"], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"y3", "-", "y2"}], ")"}], "2"]}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c", "=", 
   SqrtBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"x1", "-", "x2"}], ")"}], "2"], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"y1", "-", "y2"}], ")"}], "2"]}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s", "=", 
   FractionBox[
    RowBox[{"a", "+", "b", "+", "c"}], "2"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Vh", "=", 
   SqrtBox[
    RowBox[{"s", 
     RowBox[{"(", 
      RowBox[{"s", "-", "a"}], ")"}], 
     RowBox[{"(", 
      RowBox[{"s", "-", "b"}], ")"}], 
     RowBox[{"(", 
      RowBox[{"s", "-", "c"}], ")"}]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Vh", ",", 
     RowBox[{"Det", "[", "Ds2D", "]"}]}], "}"}], ",", "Reals"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.72408966654769*^9, 3.724089689257317*^9}, {
   3.724089720347743*^9, 3.724089864159934*^9}, {3.724089894828959*^9, 
   3.7240899640955276`*^9}, {3.72409002772718*^9, 3.724090028510881*^9}, 
   3.7242234886404963`*^9, 3.72422794713948*^9, {3.724315565397843*^9, 
   3.724315580622594*^9}, {3.724405000273612*^9, 3.724405003033868*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"x3", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "y1"}], "+", "y2"}], ")"}]}], "+", 
      RowBox[{"x2", " ", 
       RowBox[{"(", 
        RowBox[{"y1", "-", "y3"}], ")"}]}], "+", 
      RowBox[{"x1", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "y2"}], "+", "y3"}], ")"}]}]}], "]"}]}], ",", 
   RowBox[{
    RowBox[{"x3", " ", 
     RowBox[{"(", 
      RowBox[{"y1", "-", "y2"}], ")"}]}], "+", 
    RowBox[{"x1", " ", 
     RowBox[{"(", 
      RowBox[{"y2", "-", "y3"}], ")"}]}], "+", 
    RowBox[{"x2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "y1"}], "+", "y3"}], ")"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.724089690257894*^9, {3.724089855090466*^9, 3.724089864675572*^9}, {
   3.724089908888988*^9, 3.724089964501605*^9}, 3.7240900295345488`*^9, {
   3.724227936200034*^9, 3.7242279478565598`*^9}, 3.724235182642973*^9, 
   3.724315581450138*^9, 3.724397677893528*^9, 3.7244049557241087`*^9, 
   3.7244050034091587`*^9, 3.724587358997538*^9, 3.724587432280349*^9, 
   3.724587905422955*^9, 3.724603061703994*^9, 3.7246031441591578`*^9, 
   3.724603262303187*^9, 3.724605396996766*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Lambda]", "[", 
    RowBox[{"k_", ",", "\[Nu]_"}], "]"}], "=", 
   FractionBox[
    RowBox[{"k", " ", "\[Nu]"}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", "\[Nu]"}], ")"}], 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"2", "\[Nu]"}]}], ")"}]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Mu]", "[", 
    RowBox[{"k_", ",", "\[Nu]_"}], "]"}], "=", 
   FractionBox[
    RowBox[{"k", " "}], 
    RowBox[{"2", 
     RowBox[{"(", 
      RowBox[{"1", "+", "\[Nu]"}], ")"}]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"LameCoefficients", "[", 
    RowBox[{"\[Kappa]_", ",", "\[Nu]_"}], "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Lambda]", "[", 
      RowBox[{"k", ",", "\[Nu]"}], "]"}], ",", " ", 
     RowBox[{"\[Mu]", "[", 
      RowBox[{"k", ",", "\[Nu]"}], "]"}]}], "}"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7241681283472557`*^9, 3.724168216400423*^9}, {
   3.724224637429734*^9, 3.724224652163271*^9}, {3.724224706877305*^9, 
   3.7242247376663713`*^9}, {3.72422731987132*^9, 3.7242273544115257`*^9}, 
   3.724315596077681*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"N", "@", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Lambda]", "[", 
      RowBox[{"1", ",", " ", "\[Nu]"}], "]"}], "\[Equal]", "1"}], ",", 
    "\[Nu]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"\[Lambda]", "[", 
  RowBox[{"1.0", ",", "0.33"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"\[Mu]", "[", 
  RowBox[{"1.0", ",", "0.33"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7241681283472557`*^9, 3.724168216400423*^9}, {
   3.724224637429734*^9, 3.724224652163271*^9}, {3.724224706877305*^9, 
   3.7242247376663713`*^9}, {3.72422731987132*^9, 3.7242273544115257`*^9}, 
   3.724315596077681*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Nu]", "\[Rule]", 
     RowBox[{"-", "1.3660254037844386`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Nu]", "\[Rule]", "0.3660254037844386`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.7242274653398037`*^9, 3.724235059634096*^9, 
  3.724235183047614*^9, 3.724397678062852*^9, 3.724587359036392*^9, 
  3.724587432316491*^9, 3.7245879055179996`*^9, 3.72460306187831*^9, 
  3.724603144211635*^9, 3.724603262647393*^9, 3.724605397202257*^9}],

Cell[BoxData["0.729765590446705`"], "Output",
 CellChangeTimes->{3.7242274653398037`*^9, 3.724235059634096*^9, 
  3.724235183047614*^9, 3.724397678062852*^9, 3.724587359036392*^9, 
  3.724587432316491*^9, 3.7245879055179996`*^9, 3.72460306187831*^9, 
  3.724603144211635*^9, 3.724603262647393*^9, 3.724605397203614*^9}],

Cell[BoxData["0.37593984962406013`"], "Output",
 CellChangeTimes->{3.7242274653398037`*^9, 3.724235059634096*^9, 
  3.724235183047614*^9, 3.724397678062852*^9, 3.724587359036392*^9, 
  3.724587432316491*^9, 3.7245879055179996`*^9, 3.72460306187831*^9, 
  3.724603144211635*^9, 3.724603262647393*^9, 3.7246053972048063`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"$Assumptions", "=", 
   RowBox[{"_", "\[Element]", "Reals"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Id", "=", " ", 
   RowBox[{"IdentityMatrix", "[", "2", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"VenantKirchhoffPotential", "[", 
   RowBox[{"F_", ",", "k_", ",", "\[Nu]_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "E", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"E", "=", 
      RowBox[{
       FractionBox["1", "2"], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"F", "\[Transpose]"}], ".", "F"}], "-", "Id"}], ")"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Mu]", "[", 
        RowBox[{"k", ",", "\[Nu]"}], "]"}], 
       RowBox[{"Tr", "[", 
        RowBox[{"E", ".", "E"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Lambda]", "[", 
         RowBox[{"k", ",", "\[Nu]"}], "]"}], "/", "2"}], 
       SuperscriptBox[
        RowBox[{"Tr", "[", "E", "]"}], "2"]}]}]}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"VenantKirchhoffStress", "[", 
   RowBox[{"F_", ",", "k_", ",", "\[Nu]_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "E", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"E", "=", 
      RowBox[{
       FractionBox["1", "2"], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"F", "\[Transpose]"}], ".", "F"}], "-", "Id"}], ")"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"F", ".", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", 
         RowBox[{"\[Mu]", "[", 
          RowBox[{"k", ",", "\[Nu]"}], "]"}], " ", "E"}], "+", 
        RowBox[{
         RowBox[{"\[Lambda]", "[", 
          RowBox[{"k", ",", "\[Nu]"}], "]"}], " ", 
         RowBox[{"Tr", "[", "E", "]"}], " ", "Id"}]}], ")"}]}]}]}], 
   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"VenantKirchhoffStressDifferential", "[", 
   RowBox[{"F_", ",", "dF_", ",", "k_", ",", "\[Nu]_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"E", ",", "dE"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"E", "=", 
      RowBox[{
       FractionBox["1", "2"], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"F", "\[Transpose]"}], ".", "F"}], "-", "Id"}], ")"}]}]}], 
     ";", 
     RowBox[{"dE", "=", 
      RowBox[{
       FractionBox["1", "2"], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"dF", "\[Transpose]"}], ".", "F"}], "+", 
         RowBox[{
          RowBox[{"F", "\[Transpose]"}], ".", "dF"}]}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dF", ".", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          RowBox[{"\[Mu]", "[", 
           RowBox[{"k", ",", "\[Nu]"}], "]"}], " ", "E"}], "+", 
         RowBox[{
          RowBox[{"\[Lambda]", "[", 
           RowBox[{"k", ",", "\[Nu]"}], "]"}], " ", 
          RowBox[{"Tr", "[", "E", "]"}], " ", "Id"}]}], ")"}]}], "+", 
      RowBox[{"F", ".", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          RowBox[{"\[Mu]", "[", 
           RowBox[{"k", ",", "\[Nu]"}], "]"}], " ", "dE"}], "+", 
         RowBox[{
          RowBox[{"\[Lambda]", "[", 
           RowBox[{"k", ",", "\[Nu]"}], "]"}], " ", 
          RowBox[{"Tr", "[", "dE", "]"}], " ", "Id"}]}], ")"}]}]}]}]}], 
   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Ds", "[", "tr_", "]"}], ":=", 
   RowBox[{"Transpose", "[", 
    RowBox[{
     RowBox[{"tr", "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", "2"}], "]"}], "]"}], "-", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"tr", "[", 
        RowBox[{"[", "3", "]"}], "]"}], ",", 
       RowBox[{"tr", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Bm", "[", "tr_", "]"}], ":=", 
   RowBox[{"Inverse", "[", 
    RowBox[{"Ds", "[", "tr", "]"}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ElasticForce", "[", 
   RowBox[{"P_", ",", "vA_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "H", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"H", "=", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Abs", "[", 
         RowBox[{"Det", "[", 
          RowBox[{"Ds", "[", "vA", "]"}], "]"}], "]"}]}], 
       RowBox[{"P", ".", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"Inverse", "[", 
           RowBox[{"Ds", "[", "vA", "]"}], "]"}], ")"}], 
         "\[Transpose]"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"H", "\[Transpose]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"H", "\[Transpose]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{
          RowBox[{"H", "\[Transpose]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "-", 
        RowBox[{
         RowBox[{"H", "\[Transpose]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}]}]}], "\[IndentingNewLine]",
    "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"F", "[", 
    RowBox[{"vA_", ",", "vB_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Ds", "[", "vB", "]"}], ".", 
    RowBox[{"Bm", "[", "vA", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ScanLine", "[", 
   RowBox[{"\[Alpha]_", ",", "v_", ",", "vA_", ",", "k_", ",", "\[Nu]_"}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"P", ",", "f"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"f", "=", 
      RowBox[{"ElasticForce", "[", 
       RowBox[{
        RowBox[{"VenantKirchhoffStress", "[", 
         RowBox[{
          RowBox[{"F", "[", 
           RowBox[{"vA", ",", "v"}], "]"}], ",", "k", ",", "\[Nu]"}], "]"}], 
        ",", "vA"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"P", "=", 
      RowBox[{"VenantKirchhoffStress", "[", 
       RowBox[{
        RowBox[{"F", "[", 
         RowBox[{"vA", ",", 
          RowBox[{"v", "+", 
           RowBox[{"\[Alpha]", " ", "f"}]}]}], "]"}], ",", "k", ",", 
        "\[Nu]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"ElasticForce", "[", 
           RowBox[{"P", ",", "vA"}], "]"}], "]"}], ".", 
         RowBox[{"Flatten", "[", "f", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"VenantKirchhoffPotential", "[", 
        RowBox[{
         RowBox[{"F", "[", 
          RowBox[{"vA", ",", 
           RowBox[{"v", "+", 
            RowBox[{"\[Alpha]", " ", "f"}]}]}], "]"}], ",", "k", ",", 
         "\[Nu]"}], "]"}], ",", "f"}], "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"W", "[", "x_", "]"}], ":=", 
   RowBox[{"Area", "[", 
    RowBox[{"Simplex", "[", "x", "]"}], "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->CompressedData["
1:eJwdzE0og3EABvBNOZAwGi0hilBbE5a4YC0aDqZtXLB3FmFekzjsVdph0g4y
ZdOkFg4uK7KarwhlkowmZGQhzGfJQUr+z//w9KunpyeLYVWGKB6Pl0ECcxlF
uGPrpTI+snsPFf0+HUsMDi8w0C78VnHE+slQIyxYNDbB0IeLOu5VtsIKoV4P
/7itLhjwR3fDPKeKhaaaoyEY1XCmnSAmLbha4O9VOQv3Di198DpQZYa1mXEc
XOusHoFBRwNVqR9zQPW82AntHpNtlejnHqmRw+avDezDOz9Qpq2N3SQO1quo
EakmAQpkjiToO5/Oh/sWN1XijuuBHq2Qenm8v5SyTf5E8mW483jxmkp88hS9
QWk4hxER2aYN6q1EHEgn1hWbqXdtD+oM4vPqlAEmtp/0QIFJ0wvLqtwDMFlj
G4R/vhgOlgQU1LSDdyvtS/mjsGLuRionGv3rhdD7eloCs3VWGdzlf7rgrHll
Bv4D9KQGEA==
  "]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"efT", "=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"xT", ",", "XT"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"xT", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{
           RowBox[{"2", "i"}], "+", "j"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "0", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "2"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XT", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"X", "[", 
          RowBox[{
           RowBox[{"2", "i"}], "+", "j"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "0", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "2"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"W", "[", "XT", "]"}]}], "2", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"VenantKirchhoffPotential", "[", 
            RowBox[{
             RowBox[{"F", "[", 
              RowBox[{"XT", ",", "xT"}], "]"}], ",", "k", ",", "\[Nu]"}], 
            "]"}], ",", 
           RowBox[{"x", "[", "i", "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "6"}], "}"}]}], "]"}]}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"eKT", "[", 
     RowBox[{"XX_", ",", "xx_", ",", "k_", ",", "\[Nu]_"}], "]"}], "=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"xT", ",", "XT"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"xT", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"x", "[", 
           RowBox[{
            RowBox[{"2", "i"}], "+", "j"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", "2"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"XT", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"X", "[", 
           RowBox[{
            RowBox[{"2", "i"}], "+", "j"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", "2"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"W", "[", "XT", "]"}]}], "2", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"VenantKirchhoffPotential", "[", 
              RowBox[{
               RowBox[{"F", "[", 
                RowBox[{"XT", ",", "xT"}], "]"}], ",", "k", ",", "\[Nu]"}], 
              "]"}], ",", 
             RowBox[{"x", "[", "i", "]"}], ",", 
             RowBox[{"x", "[", "j", "]"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "6"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", "6"}], "}"}]}], "]"}]}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"x", "[", "i_", "]"}], "\[Rule]", " ", 
           RowBox[{"xx", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], ",", 
          RowBox[{
           RowBox[{"X", "[", "i_", "]"}], "\[Rule]", "  ", 
           RowBox[{"XX", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}]}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fT", "=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"xT", ",", "XT"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"xT", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"x", "[", 
           RowBox[{
            RowBox[{"2", "i"}], "+", "j"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", "2"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"XT", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"X", "[", 
           RowBox[{
            RowBox[{"2", "i"}], "+", "j"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", "2"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Flatten", "[", 
        RowBox[{"ElasticForce", "[", 
         RowBox[{
          RowBox[{"VenantKirchhoffStress", "[", 
           RowBox[{
            RowBox[{"F", "[", 
             RowBox[{"XT", ",", "xT"}], "]"}], ",", "k", ",", "\[Nu]"}], 
           "]"}], ",", "XT"}], "]"}], "]"}]}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kT", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"fT", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"x", "[", "j", "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "6"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"fT", "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"k", "\[Rule]", "1"}], ",", 
    RowBox[{"\[Nu]", "\[Rule]", "0.33"}], ",", 
    RowBox[{
     RowBox[{"x", "[", "i_", "]"}], "\[Rule]", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "3", ",", 
        RowBox[{"-", "4"}], ",", "5", ",", "6"}], "}"}], "[", 
      RowBox[{"[", "i", "]"}], "]"}]}], ",", 
    RowBox[{
     RowBox[{"X", "[", "i_", "]"}], "\[Rule]", "  ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"2", ",", "4", ",", "1", ",", "5", ",", "2", ",", "9"}], "}"}],
       "[", 
      RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"efT", "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"k", "\[Rule]", "1"}], ",", 
    RowBox[{"\[Nu]", "\[Rule]", "0.33"}], ",", 
    RowBox[{
     RowBox[{"x", "[", "i_", "]"}], "\[Rule]", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "3", ",", 
        RowBox[{"-", "4"}], ",", "5", ",", "6"}], "}"}], "[", 
      RowBox[{"[", "i", "]"}], "]"}]}], ",", 
    RowBox[{
     RowBox[{"X", "[", "i_", "]"}], "\[Rule]", "  ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"2", ",", "4", ",", "1", ",", "5", ",", "2", ",", "9"}], "}"}],
       "[", 
      RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"eKT", " ", "[", " ", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "4", ",", "1", ",", "5", ",", "2", ",", "9"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", 
     RowBox[{"-", "4"}], ",", "5", ",", "6"}], "}"}], ",", "1", ",", "0.33"}],
   "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"temp", "=", 
   RowBox[{"kT", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"k", "\[Rule]", "1"}], ",", 
      RowBox[{"\[Nu]", "\[Rule]", "0.33"}], ",", 
      RowBox[{
       RowBox[{"x", "[", "i_", "]"}], "\[Rule]", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "3", ",", 
          RowBox[{"-", "4"}], ",", "5", ",", "6"}], "}"}], "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"X", "[", "i_", "]"}], "\[Rule]", "  ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "4", ",", "1", ",", "5", ",", "2", ",", "9"}], 
         "}"}], "[", 
        RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Chop", "[", 
    RowBox[{"temp", "-", 
     RowBox[{"Transpose", "[", "temp", "]"}]}], "]"}], "//", "MatrixForm"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.724589367635994*^9, 3.724589487024927*^9}, {
   3.724589538253355*^9, 3.724589558925511*^9}, {3.724589620766015*^9, 
   3.724589650346469*^9}, {3.724589699023572*^9, 3.7245897151108437`*^9}, {
   3.724589813938815*^9, 3.724589834871962*^9}, {3.724589986330413*^9, 
   3.724590098124498*^9}, {3.724590134922864*^9, 3.724590143523918*^9}, {
   3.724590257246785*^9, 3.724590258986888*^9}, {3.724590303950273*^9, 
   3.724590308181983*^9}, {3.72459034720189*^9, 3.724590366498754*^9}, {
   3.724590473563046*^9, 3.724590475558848*^9}, {3.724590509066039*^9, 
   3.7245905149951963`*^9}, {3.724590545106266*^9, 3.7245905476616983`*^9}, {
   3.72459058007507*^9, 3.7245906349063187`*^9}, {3.724590670343454*^9, 
   3.724590790656476*^9}, 3.724590934111643*^9, 3.724590971157908*^9, {
   3.724591014047557*^9, 3.7245911057849703`*^9}, {3.7245911631800613`*^9, 
   3.7245911898419113`*^9}, {3.724591230898416*^9, 3.7245912441044617`*^9}, {
   3.724592336412339*^9, 3.724592347613459*^9}, {3.724592379747469*^9, 
   3.7245924250439*^9}, {3.724592469786996*^9, 3.724592499447689*^9}, {
   3.724592532671401*^9, 3.724592591703023*^9}, {3.724592626981275*^9, 
   3.724592668007554*^9}, {3.724592749023663*^9, 3.724592954213059*^9}, 
   3.724593269662024*^9, {3.724593306322081*^9, 3.72459338297961*^9}, {
   3.7245934234096327`*^9, 3.7245935212366543`*^9}, {3.724593589495419*^9, 
   3.724593591466447*^9}, {3.724593649863243*^9, 3.724593713666687*^9}, {
   3.72460289445343*^9, 3.7246028968549967`*^9}, {3.724603399347714*^9, 
   3.724603533031906*^9}, {3.724603660949388*^9, 3.724603668849609*^9}, {
   3.7246037825242434`*^9, 3.724603806584735*^9}, 3.724603842421975*^9, {
   3.7246039379511414`*^9, 3.724603941424683*^9}, 3.7246040700783043`*^9, {
   3.7246043458031187`*^9, 3.724604348795532*^9}, {3.7246044879039793`*^9, 
   3.724604488349537*^9}, {3.724604560804987*^9, 3.7246045988663816`*^9}, {
   3.72460463257762*^9, 3.7246046358962393`*^9}, {3.7246047029194107`*^9, 
   3.724604745605329*^9}, {3.7246050571551456`*^9, 3.724605087300693*^9}, {
   3.7246051400823593`*^9, 3.724605335043591*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"172.8636886333481`", ",", 
   RowBox[{"-", "923.5432109685979`"}], ",", 
   RowBox[{"-", "201.3657673595754`"}], ",", "1185.9849624060148`", ",", 
   "28.502078726227296`", ",", 
   RowBox[{"-", "262.4417514374169`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7245934510653048`*^9, 3.724593479627973*^9}, {
   3.7245935158911667`*^9, 3.724593523091021*^9}, {3.724593704993019*^9, 
   3.724593714120654*^9}, 3.724593944703743*^9, 3.724602897230591*^9, 
   3.724603028371064*^9, 3.724603062194292*^9, 3.724603144414619*^9, 
   3.724603263892269*^9, {3.724603518339888*^9, 3.724603533621684*^9}, 
   3.7246036616491737`*^9, {3.7246037880376387`*^9, 3.724603807969492*^9}, 
   3.724603842850637*^9, 3.724603942336871*^9, 3.724604351204755*^9, 
   3.724604403206546*^9, {3.724604473668233*^9, 3.72460449231022*^9}, {
   3.724604562349761*^9, 3.724604599593073*^9}, {3.72460473266306*^9, 
   3.7246047460811977`*^9}, 3.724605249320528*^9, {3.724605297444448*^9, 
   3.724605337979855*^9}, 3.724605399019719*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"172.8636886333481`", ",", 
   RowBox[{"-", "923.5432109685979`"}], ",", 
   RowBox[{"-", "201.3657673595754`"}], ",", "1185.9849624060148`", ",", 
   "28.502078726227328`", ",", 
   RowBox[{"-", "262.44175143741705`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7245934510653048`*^9, 3.724593479627973*^9}, {
   3.7245935158911667`*^9, 3.724593523091021*^9}, {3.724593704993019*^9, 
   3.724593714120654*^9}, 3.724593944703743*^9, 3.724602897230591*^9, 
   3.724603028371064*^9, 3.724603062194292*^9, 3.724603144414619*^9, 
   3.724603263892269*^9, {3.724603518339888*^9, 3.724603533621684*^9}, 
   3.7246036616491737`*^9, {3.7246037880376387`*^9, 3.724603807969492*^9}, 
   3.724603842850637*^9, 3.724603942336871*^9, 3.724604351204755*^9, 
   3.724604403206546*^9, {3.724604473668233*^9, 3.72460449231022*^9}, {
   3.724604562349761*^9, 3.724604599593073*^9}, {3.72460473266306*^9, 
   3.7246047460811977`*^9}, 3.724605249320528*^9, {3.724605297444448*^9, 
   3.724605337979855*^9}, 3.724605399318532*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "121.33498452012384`"}], ",", "42.305528527200366`", ",", 
     "147.60902255639098`", ",", 
     RowBox[{"-", "51.007518796992485`"}], ",", 
     RowBox[{"-", "26.274038036267136`"}], ",", "8.701990269792129`"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"42.305528527200366`", ",", 
     RowBox[{"-", "325.78965059708094`"}], ",", 
     RowBox[{"-", "48.74303405572755`"}], ",", "406.04334365325076`", ",", 
     "6.4375055285272005`", ",", 
     RowBox[{"-", "80.25369305616984`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"147.60902255639098`", ",", 
     RowBox[{"-", "48.74303405572755`"}], ",", 
     RowBox[{"-", "185.2896948252985`"}], ",", "59.24812030075188`", ",", 
     "37.680672268907564`", ",", 
     RowBox[{"-", "10.505086245024327`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "51.007518796992485`"}], ",", "406.04334365325076`", ",", 
     "59.24812030075188`", ",", 
     RowBox[{"-", "517.1782397169395`"}], ",", 
     RowBox[{"-", "8.240601503759397`"}], ",", "111.13489606368861`"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "26.274038036267136`"}], ",", "6.4375055285272005`", ",", 
     "37.680672268907564`", ",", 
     RowBox[{"-", "8.240601503759397`"}], ",", 
     RowBox[{"-", "11.406634232640425`"}], ",", "1.8030959752321982`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8.701990269792129`", ",", 
     RowBox[{"-", "80.25369305616984`"}], ",", 
     RowBox[{"-", "10.505086245024327`"}], ",", "111.13489606368861`", ",", 
     "1.8030959752321982`", ",", 
     RowBox[{"-", "30.881203007518792`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7245934510653048`*^9, 3.724593479627973*^9}, {
   3.7245935158911667`*^9, 3.724593523091021*^9}, {3.724593704993019*^9, 
   3.724593714120654*^9}, 3.724593944703743*^9, 3.724602897230591*^9, 
   3.724603028371064*^9, 3.724603062194292*^9, 3.724603144414619*^9, 
   3.724603263892269*^9, {3.724603518339888*^9, 3.724603533621684*^9}, 
   3.7246036616491737`*^9, {3.7246037880376387`*^9, 3.724603807969492*^9}, 
   3.724603842850637*^9, 3.724603942336871*^9, 3.724604351204755*^9, 
   3.724604403206546*^9, {3.724604473668233*^9, 3.72460449231022*^9}, {
   3.724604562349761*^9, 3.724604599593073*^9}, {3.72460473266306*^9, 
   3.7246047460811977`*^9}, 3.724605249320528*^9, {3.724605297444448*^9, 
   3.724605337979855*^9}, 3.724605399319942*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.7245934510653048`*^9, 3.724593479627973*^9}, {
   3.7245935158911667`*^9, 3.724593523091021*^9}, {3.724593704993019*^9, 
   3.724593714120654*^9}, 3.724593944703743*^9, 3.724602897230591*^9, 
   3.724603028371064*^9, 3.724603062194292*^9, 3.724603144414619*^9, 
   3.724603263892269*^9, {3.724603518339888*^9, 3.724603533621684*^9}, 
   3.7246036616491737`*^9, {3.7246037880376387`*^9, 3.724603807969492*^9}, 
   3.724603842850637*^9, 3.724603942336871*^9, 3.724604351204755*^9, 
   3.724604403206546*^9, {3.724604473668233*^9, 3.72460449231022*^9}, {
   3.724604562349761*^9, 3.724604599593073*^9}, {3.72460473266306*^9, 
   3.7246047460811977`*^9}, 3.724605249320528*^9, {3.724605297444448*^9, 
   3.724605337979855*^9}, 3.724605399800943*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", "fT", "]"}]], "Input",
 CellChangeTimes->{{3.724593277856493*^9, 3.724593292145032*^9}}],

Cell[BoxData[
 RowBox[{"{", "6", "}"}]], "Output",
 CellChangeTimes->{3.724593292609509*^9, 3.7246030626369047`*^9, 
  3.724603144743663*^9, 3.724603264255351*^9, 3.724605400004499*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"v", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "0"}], "}"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ds", "[", "v", "]"}], "//", 
  "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Bm", "[", "v", "]"}], "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.724223538235072*^9, 3.724223553311693*^9}, {
   3.7242235939850683`*^9, 3.724223642629326*^9}, {3.724223746318087*^9, 
   3.7242238040229483`*^9}, {3.724223850333068*^9, 3.7242240271296463`*^9}, {
   3.724224126906867*^9, 3.72422413352977*^9}, {3.724224319228609*^9, 
   3.724224319297139*^9}, {3.7242243983454027`*^9, 3.724224398670876*^9}, {
   3.724231606498535*^9, 3.724231846675408*^9}, 3.724232862283807*^9, 
   3.724235156582073*^9, {3.7242447550854673`*^9, 3.724244758920833*^9}, {
   3.724245694448634*^9, 3.724245698919688*^9}, {3.72427187622665*^9, 
   3.724271904710058*^9}, {3.724271947474313*^9, 3.7242719854385843`*^9}, {
   3.7242720161966143`*^9, 3.72427206858563*^9}, 3.7242721575463552`*^9, {
   3.724315609036182*^9, 3.724315613972642*^9}, {3.7245873504862823`*^9, 
   3.724587350786141*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.724228683843874*^9, {3.724230414719657*^9, 3.7242304402405024`*^9}, 
   3.724231848247554*^9, 3.724232863050156*^9, 3.724235061265629*^9, 
   3.724235183088264*^9, 3.724245783117962*^9, 3.7243976781421824`*^9, 
   3.724587359085949*^9, 3.724587432543387*^9, 3.7245879056270533`*^9, 
   3.724603062738676*^9, 3.724603144774078*^9, 3.7246032642745028`*^9, 
   3.724605400114903*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}]},
     {"0", "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.724228683843874*^9, {3.724230414719657*^9, 3.7242304402405024`*^9}, 
   3.724231848247554*^9, 3.724232863050156*^9, 3.724235061265629*^9, 
   3.724235183088264*^9, 3.724245783117962*^9, 3.7243976781421824`*^9, 
   3.724587359085949*^9, 3.724587432543387*^9, 3.7245879056270533`*^9, 
   3.724603062738676*^9, 3.724603144774078*^9, 3.7246032642745028`*^9, 
   3.72460540011677*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}]},
     {"0", "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.724228683843874*^9, {3.724230414719657*^9, 3.7242304402405024`*^9}, 
   3.724231848247554*^9, 3.724232863050156*^9, 3.724235061265629*^9, 
   3.724235183088264*^9, 3.724245783117962*^9, 3.7243976781421824`*^9, 
   3.724587359085949*^9, 3.724587432543387*^9, 3.7245879056270533`*^9, 
   3.724603062738676*^9, 3.724603144774078*^9, 3.7246032642745028`*^9, 
   3.72460540011828*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"vA", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vB", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vInit", " ", "=", " ", 
   RowBox[{"vA", "+", 
    RowBox[{"0.7", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dv", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"s", "=", 
  RowBox[{"VenantKirchhoffStress", "[", 
   RowBox[{
    RowBox[{"F", "[", 
     RowBox[{"vA", ",", "vB"}], "]"}], ",", "1", ",", "0.33"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"ds", "=", 
  RowBox[{"VenantKirchhoffStressDifferential", "[", 
   RowBox[{
    RowBox[{"F", "[", 
     RowBox[{"vA", ",", "vB"}], "]"}], ",", 
    RowBox[{"F", "[", 
     RowBox[{"vA", ",", "dv"}], "]"}], ",", "1", ",", "0.33"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"ds2", "=", 
  RowBox[{"VenantKirchhoffStressDifferential", "[", 
   RowBox[{
    RowBox[{"F", "[", 
     RowBox[{"vA", ",", "vInit"}], "]"}], ",", 
    RowBox[{"F", "[", 
     RowBox[{"vA", ",", "dv"}], "]"}], ",", "1", ",", "0.33"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"\[Psi]", "=", 
  RowBox[{"VenantKirchhoffPotential", "[", 
   RowBox[{
    RowBox[{"F", "[", 
     RowBox[{"vA", ",", "vB"}], "]"}], ",", "1", ",", "0.33"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"F", "[", 
  RowBox[{"vA", ",", "vB"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"g", "=", 
  RowBox[{"Partition", "[", 
   RowBox[{
    RowBox[{"Flatten", "@", 
     RowBox[{"ElasticForce", "[", 
      RowBox[{"s", ",", "vA"}], "]"}]}], ",", "1"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Partition", "[", 
  RowBox[{
   RowBox[{"Flatten", "@", 
    RowBox[{"ElasticForce", "[", 
     RowBox[{"ds", ",", "vA"}], "]"}]}], ",", "1"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Partition", "[", 
  RowBox[{
   RowBox[{"Flatten", "@", 
    RowBox[{"ElasticForce", "[", 
     RowBox[{"ds2", ",", "vA"}], "]"}]}], ",", "1"}], "]"}]}], "Input",
 CellChangeTimes->{{3.724603181761612*^9, 3.7246031820197144`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"5.882352941176471`", ",", "18.531623175586024`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.2556390977443606`", ",", "26.669615214506855`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.724603144804782*^9, 3.724603183188472*^9, 
  3.724603264301743*^9, 3.724605400226029*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1.4816452896948251`", ",", 
     RowBox[{"-", "5.17470145953118`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.386112339672711`", ",", "14.086687306501547`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.724603144804782*^9, 3.724603183188472*^9, 
  3.724603264301743*^9, 3.7246054002277937`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.7392746572313135`"}], ",", 
     RowBox[{"-", "0.03095975232198145`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3668730650154798`", ",", 
     RowBox[{"-", "0.2257850508624502`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.724603144804782*^9, 3.724603183188472*^9, 
  3.724603264301743*^9, 3.724605400229175*^9}],

Cell[BoxData["27.421494913754977`"], "Output",
 CellChangeTimes->{3.724603144804782*^9, 3.724603183188472*^9, 
  3.724603264301743*^9, 3.7246054002304296`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "3"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.724603144804782*^9, 3.724603183188472*^9, 
  3.724603264301743*^9, 3.724605400231703*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "24.413976116762495`", "}"}], ",", 
   RowBox[{"{", "28.925254312251216`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "18.531623175586024`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "26.669615214506855`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "5.882352941176471`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "2.2556390977443606`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.724603144804782*^9, 3.724603183188472*^9, 
  3.724603264301743*^9, 3.724605400232979*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"-", "3.693056169836355`"}], "}"}], ",", 
   RowBox[{"{", "21.47279964617426`", "}"}], ",", 
   RowBox[{"{", "5.17470145953118`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "14.086687306501547`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "1.481645289694825`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "7.386112339672712`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.724603144804782*^9, 3.724603183188472*^9, 
  3.724603264301743*^9, 3.7246054002342463`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"-", "0.7702344095532949`"}], "}"}], ",", 
   RowBox[{"{", "0.14108801415302957`", "}"}], ",", 
   RowBox[{"{", "0.03095975232198145`", "}"}], ",", 
   RowBox[{"{", "0.2257850508624502`", "}"}], ",", 
   RowBox[{"{", "0.7392746572313135`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.3668730650154798`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.724603144804782*^9, 3.724603183188472*^9, 
  3.724603264301743*^9, 3.724605400235474*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"t1", "=", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"system", "[", "t_", "]"}], "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"i", "[", "j", "]"}], "[", "t", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"{", 
        RowBox[{"xc", ",", "yc"}], "}"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Det", "[", 
  RowBox[{"Ds", "[", "vA", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rhs", "=", 
   RowBox[{
    RowBox[{"ElasticForce", "[", 
     RowBox[{
      RowBox[{"VenantKirchhoffStress", "[", 
       RowBox[{
        RowBox[{"F", "[", 
         RowBox[{"vA", ",", 
          RowBox[{"system", "[", "t", "]"}]}], "]"}], ",", "1", ",", " ", 
        "0.33"}], "]"}], ",", "vA"}], "]"}], "+", "\[IndentingNewLine]", 
    RowBox[{"0.1", 
     RowBox[{"ElasticForce", "[", 
      RowBox[{
       RowBox[{"VenantKirchhoffStressDifferential", "[", 
        RowBox[{
         RowBox[{"F", "[", 
          RowBox[{"vA", ",", 
           RowBox[{"system", "[", "t", "]"}]}], "]"}], ",", 
         RowBox[{"F", "[", 
          RowBox[{"vA", ",", 
           RowBox[{
            RowBox[{"system", "'"}], "[", "t", "]"}]}], "]"}], ",", "1", ",", 
         "0.33"}], "]"}], ",", "vA"}], "]"}]}], "+", "\[IndentingNewLine]", 
    RowBox[{"0.0", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"Cos", "[", 
          RowBox[{"0.5", "t"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"lhs", "=", 
    RowBox[{
     RowBox[{"system", "''"}], "[", "t", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"y", "[", "t_", "]"}], "=", 
    RowBox[{"system", "[", "t", "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sol", "[", "t_", "]"}], "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"lhs", "\[Equal]", "rhs"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"y", "[", "0", "]"}], "\[Equal]", "vInit"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"y", "'"}], "[", "0", "]"}], "\[Equal]", 
        RowBox[{"0", "vInit"}]}]}], "}"}], ",", 
     RowBox[{"y", "[", "t", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "t1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Animate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Graphics", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"PointSize", "[", "0.05", "]"}], ",", 
       RowBox[{"Polygon", "[", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"system", "[", "t", "]"}], "/.", 
          RowBox[{
           RowBox[{"sol", "[", "t", "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Point", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"system", "[", "t", "]"}], "/.", 
            RowBox[{"sol", "[", "t", "]"}]}], ")"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"VertexColors", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Red", ",", " ", "Green", ",", " ", "Blue"}], "}"}]}]}], 
        "]"}]}], "}"}], "\[IndentingNewLine]", ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "t1"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ParametricPlot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"system", "[", "t", "]"}], "/.", 
     RowBox[{"sol", "[", "t", "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "t1"}], "}"}]}], "]"}], 
  "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7242326924864063`*^9, 3.724232762249051*^9}, {
   3.7242327937836447`*^9, 3.724232824882113*^9}, {3.724232881338763*^9, 
   3.724232900584443*^9}, {3.724232934538005*^9, 3.724232979916402*^9}, {
   3.724233061486107*^9, 3.7242330962620573`*^9}, {3.724233130419404*^9, 
   3.724233150714244*^9}, {3.7242331826819143`*^9, 3.724233184128578*^9}, {
   3.7242333344052267`*^9, 3.724233337559174*^9}, {3.724233380945745*^9, 
   3.72423339138218*^9}, {3.724233851541832*^9, 3.724234231210886*^9}, {
   3.724234268611142*^9, 3.724234326001782*^9}, {3.7242343686287413`*^9, 
   3.724234391741345*^9}, {3.72423443783892*^9, 3.7242344816298237`*^9}, {
   3.7242345202668*^9, 3.724234530390826*^9}, {3.724234576814331*^9, 
   3.7242346465796824`*^9}, {3.724234682333482*^9, 3.72423470339421*^9}, {
   3.724234745894574*^9, 3.724234771524261*^9}, {3.72423482146062*^9, 
   3.724234833872048*^9}, {3.7242348868156424`*^9, 3.724234906696403*^9}, {
   3.7242349457485447`*^9, 3.724234957743059*^9}, {3.7242350030591717`*^9, 
   3.72423500349541*^9}, {3.724235035498201*^9, 3.724235036201378*^9}, {
   3.724235124449443*^9, 3.724235133597024*^9}, 3.7242351697773657`*^9, 
   3.72423523850448*^9, {3.724235280887616*^9, 3.7242355328939257`*^9}, {
   3.7242357888845453`*^9, 3.724235804878684*^9}, {3.724236174249601*^9, 
   3.7242361843932943`*^9}, {3.724236258575786*^9, 3.724236315912712*^9}, {
   3.724236415612318*^9, 3.7242365585424757`*^9}, {3.724236637478953*^9, 
   3.724236682009015*^9}, {3.724236854322113*^9, 3.72423689921167*^9}, {
   3.724236955738946*^9, 3.72423696026403*^9}, {3.72423700657848*^9, 
   3.724237010768138*^9}, {3.7242371267994223`*^9, 3.724237177862224*^9}, {
   3.724237264672913*^9, 3.72423728719865*^9}, {3.7242373339044943`*^9, 
   3.7242374193764057`*^9}, {3.724237458410349*^9, 3.724237491360104*^9}, {
   3.7242382857830553`*^9, 3.724238432333127*^9}, {3.7242384857266207`*^9, 
   3.7242386128231564`*^9}, {3.7242442726836767`*^9, 3.724244311998945*^9}, {
   3.724244363374016*^9, 3.724244604613559*^9}, 3.7242446502994347`*^9, {
   3.724244684908593*^9, 3.724244698209762*^9}, {3.724244833648512*^9, 
   3.724244911197043*^9}, 3.724245051977561*^9, {3.7242451018684893`*^9, 
   3.724245192565254*^9}, {3.724245322739931*^9, 3.724245323039055*^9}, {
   3.724245627445895*^9, 3.724245673373314*^9}, 3.7242589245125647`*^9, {
   3.724259215926653*^9, 3.724259253679093*^9}, {3.724259374712345*^9, 
   3.724259377905224*^9}, {3.724406141401492*^9, 3.7244061424238873`*^9}, {
   3.724406211470293*^9, 3.724406213023757*^9}, {3.724406293193372*^9, 
   3.7244063321585417`*^9}, {3.724406387258238*^9, 3.724406398640877*^9}, {
   3.724512357280113*^9, 3.724512365246765*^9}, {3.7245246122292347`*^9, 
   3.72452468705066*^9}, 3.724524733284132*^9, {3.724524763348152*^9, 
   3.724524789917363*^9}, {3.7245248358819017`*^9, 3.72452488056159*^9}, {
   3.724532929520179*^9, 3.724533006817008*^9}, {3.724533088512492*^9, 
   3.72453309314869*^9}, {3.724533124046405*^9, 3.7245331618188047`*^9}, {
   3.724587301750389*^9, 3.724587326340282*^9}, {3.7245874564656353`*^9, 
   3.7245874608924847`*^9}, 3.724587541436612*^9, {3.724587786760716*^9, 
   3.724587788812701*^9}, {3.724587836151786*^9, 3.724587862892111*^9}, 
   3.724603171678233*^9, {3.72460561166183*^9, 3.7246056217239532`*^9}, {
   3.724605686427842*^9, 3.724605694625022*^9}, {3.72460572934197*^9, 
   3.724605730487081*^9}, 3.7246066771123743`*^9, {3.724606707770347*^9, 
   3.724606709314981*^9}, {3.724607012996921*^9, 3.724607020164049*^9}, {
   3.724607394885858*^9, 3.7246074091520977`*^9}, {3.724678886164576*^9, 
   3.72467888631432*^9}}],

Cell[BoxData[
 RowBox[{"-", "1"}]], "Output",
 CellChangeTimes->{{3.724244449242386*^9, 3.724244474524508*^9}, {
   3.7242445070164633`*^9, 3.72424460553973*^9}, 3.724244651410385*^9, {
   3.724244686146175*^9, 3.72424469888448*^9}, {3.7242448371810904`*^9, 
   3.7242449122462807`*^9}, 3.724245053024631*^9, {3.724245102483182*^9, 
   3.724245193114312*^9}, 3.724245324195294*^9, 3.724245630248637*^9, 
   3.724245663385379*^9, 3.724245794565825*^9, 3.724258925291803*^9, {
   3.724259241985476*^9, 3.724259254009128*^9}, 3.72425937841775*^9, 
   3.7243976782475348`*^9, {3.724404873128778*^9, 3.72440489030332*^9}, 
   3.724405969556224*^9, 3.724406142960926*^9, 3.724406213408186*^9, {
   3.724406314792411*^9, 3.724406332858615*^9}, {3.724406390939886*^9, 
   3.724406398998315*^9}, {3.724512360602441*^9, 3.72451236581619*^9}, {
   3.724524676094692*^9, 3.724524689604814*^9}, {3.72452473627866*^9, 
   3.7245247906231947`*^9}, {3.724524840028174*^9, 3.7245248813328333`*^9}, {
   3.724532964916256*^9, 3.724533007730797*^9}, 3.724533093949366*^9, {
   3.724533125104025*^9, 3.724533162332218*^9}, 3.724587433052223*^9, 
   3.724587523119152*^9, 3.724587789486108*^9, 3.724587866289341*^9, 
   3.72458790583536*^9, 3.724603063379937*^9, 3.724603145458222*^9, 
   3.724603264347987*^9, 3.724605400245057*^9, {3.7246056125747147`*^9, 
   3.724605622734597*^9}, {3.724605687399352*^9, 3.724605695766099*^9}, 
   3.724605731281433*^9, 3.7246067106734943`*^9, {3.724607013966962*^9, 
   3.724607020691009*^9}, 3.724607208603807*^9, {3.724607396448999*^9, 
   3.724607409616251*^9}, 3.7246788876096067`*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 15.635310202027863`, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, 100}}, Typeset`size$$ = {360., {175., 182.}},
     Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`t$191491$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`t$$, $CellContext`t$191491$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Graphics[{
         PointSize[0.05], 
         Polygon[
          ReplaceAll[
           $CellContext`system[$CellContext`t$$], 
           Part[
            $CellContext`sol[$CellContext`t$$], 1]]], 
         Point[
          Part[
           ReplaceAll[
            $CellContext`system[$CellContext`t$$], 
            $CellContext`sol[$CellContext`t$$]], 1], 
          VertexColors -> {Red, Green, Blue}]}, Frame -> True, 
        PlotRange -> {{-2, 2}, {-2, 2}}], 
      "Specifications" :> {{$CellContext`t$$, 0, 100, 
         AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{407., {211., 218.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.724244449242386*^9, 3.724244474524508*^9}, {
   3.7242445070164633`*^9, 3.72424460553973*^9}, 3.724244651410385*^9, {
   3.724244686146175*^9, 3.72424469888448*^9}, {3.7242448371810904`*^9, 
   3.7242449122462807`*^9}, 3.724245053024631*^9, {3.724245102483182*^9, 
   3.724245193114312*^9}, 3.724245324195294*^9, 3.724245630248637*^9, 
   3.724245663385379*^9, 3.724245794565825*^9, 3.724258925291803*^9, {
   3.724259241985476*^9, 3.724259254009128*^9}, 3.72425937841775*^9, 
   3.7243976782475348`*^9, {3.724404873128778*^9, 3.72440489030332*^9}, 
   3.724405969556224*^9, 3.724406142960926*^9, 3.724406213408186*^9, {
   3.724406314792411*^9, 3.724406332858615*^9}, {3.724406390939886*^9, 
   3.724406398998315*^9}, {3.724512360602441*^9, 3.72451236581619*^9}, {
   3.724524676094692*^9, 3.724524689604814*^9}, {3.72452473627866*^9, 
   3.7245247906231947`*^9}, {3.724524840028174*^9, 3.7245248813328333`*^9}, {
   3.724532964916256*^9, 3.724533007730797*^9}, 3.724533093949366*^9, {
   3.724533125104025*^9, 3.724533162332218*^9}, 3.724587433052223*^9, 
   3.724587523119152*^9, 3.724587789486108*^9, 3.724587866289341*^9, 
   3.72458790583536*^9, 3.724603063379937*^9, 3.724603145458222*^9, 
   3.724603264347987*^9, 3.724605400245057*^9, {3.7246056125747147`*^9, 
   3.724605622734597*^9}, {3.724605687399352*^9, 3.724605695766099*^9}, 
   3.724605731281433*^9, 3.7246067106734943`*^9, {3.724607013966962*^9, 
   3.724607020691009*^9}, 3.724607208603807*^9, {3.724607396448999*^9, 
   3.724607409616251*^9}, 3.724678887795487*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1:eJw0mnlUjd/790lJKVOUpDTPoSSSXKVBqYhQiBJKCBGlQiQllIQyRPMkzePp
1HVOg08lzdOZOkmjSIXm8tvfZ62nf6zXuu9772vc13svR8bp8sGzPAsWLFjD
v2DB//79/3/O/++vDzSiVQu3Vk2UBkuJXeKc7YPnJqK9dl/FcPCu7sPdZ/rA
UbnrX5XcdhTdX3qu5UQfvO17eVW90Q5/1T93/GfUB/9EgvvN87yR+ndrnRqr
F9ZJ9Ajy0t7jV+lJOckNPXBPrU9oUDgGn0t7v46d+AYBmiIi/maxeGsgdGFs
3TcYKutc/fpbPJ7jXyL51/MbrHKsF32TlooyY6sU9xR0w4dXI2lpemk4V3R1
bvxeN7xJ+H37WOtHHCtTLRi37IaK040T/55lYvLEbQab9RUW3z5d5bUqFzfn
c5v29HbByPXLzxdM5eKJCrUv1+O64K2bentfVx7WWkdm8Tl2QZd7I19RVgFK
jBbEDidzIW2hg9VYZCH+7U99+H0tF8KGW6QVbhfhV0rYF4kHnfC6TOyS665i
PFqq5VZrxwFNAVGVA2JUvLGjajyrlA1Pt4lu+zpIRU3P789eybJhiGYW359b
gv7fDTZ+us8Cesy1XhXPUtRU3S99t5cJ6zpp6102IXpfeyCwzoQJxtotPsfY
iBuH+jP64hggnH9E0GEXDR/cfh2/m4cBvpzkocRAGu6xTvsV4tgBzjkzsk/r
aPhT3YE3MasdSjt0DTqW0nFnSNDy1EXt0Fi1xqBsFx0tJ/jdlWzb4HW16963
znQcjNwrmp7WCqb0N6fL7tHxj4qIaANvK7ydOskX84yO566mKEk7toBHYk1w
wQs6Xg4V492MzbCy5MzN14/oqLskKztEthnGZVZf/3uNjp86DZs/BTfBOYM5
1uN9dIzsNxm1n2yEfung1SBBxxtefxhfLjTCehdJez4mDW1zpESf9DbADq9U
1T/BNKS/DQpc5NwAPx+1qehtpCE78ovVelY9pOSeOGIehPgwv2vR9GQdjJ68
6KHyuhRPupsx5RXr4MBWT7/l4SVYbXmPxXv6C6xboBIl40HFnzS51p6MWljW
9kU/g+Tr+1CW8phQLYh1dQWp/ynCLo3lEvren2H3strbGi8L0b+a/3nRRA3M
Xd7U4qhYgDJHM8EgoAYC1L69CE7Mw53Or0SfytZAZO3z2dtrc3GesUbWur4a
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
HWL8adg2utu+ktTbdNRdpYUPyHm1nWq6cpYDKxdo7/pAODIvrauI1PdUjtld
+0AaHrQ0jrpLzkMdie6p5iAaysdFjLiQfjrMTF+24jGJn1nhdkf1TqCeePnj
VDgNj+RKLbx4qhNqDw7FmDynId9UOB/NpRNeHFx4RuUFDcPXW4mKXuqEePfD
1OGX5Llfp0GZNzl/Qmd9HV+T805il8tIeCe8+iJ+SPsNDRVqr3qpvu6ED0tv
vlz0loa2kS9jjkV3gmm0vfKzKFKPAn8eRaR1wl1DzsJT0cS/raL6Jyo64fa/
6qSFMTS87/b5nExNJ4z+2tL+inDKudaxhvpO+CsJmiqxZD5Y9Mafb+2Er2Dn
mEH4slbNgZ/MTti+TXidehwNM/VWtdl2dcINXVfJ94SfZ1WLpfR2gkbrOs0l
8TRk7dq+uOs78WdzjLwL4e9tD1/P/OoEhWrf1mLC1zV3M6b/dELD6XyNxQk0
rFm2oYk9Rc6/9felTQmH6r99Hz3fCb23INmHsMLkJ2eTRVyQmD1fm0h4lUiV
XQ0/Fy5E8cX/Rzj+ZWTORiEucEvtDnQS7lvpRHdfwQXv0/Fz3wlL32pvf7aa
C8FtLOZPwifFy+3C1nLhCPOvaj/hc/3VORfXc2E7n55+O+H8wdXO8tJcsPgg
4lpKeP2Ni1MFclxI9+oQjPofq2cvUlLiQqTx5+BrhOueP1N2V+XCnZsnHXYT
luHsX/dSgwsdvNuWCBLOq6yIfLGZC0/M1wh8Jv5bfre9cnkLF5J1ZIYCCC95
bectp8MFzqVwIz3CtMsz77K2cyFq5FfmEIlvr0Rri7geFy4Nrm+LIOz9LnKD
vT4X0tYY2hoQLuPXDfUCLpie/9PZS/KlczrS8LIhF+Lp9zY8JCxhd+q0gRF5
v2RNvSrhmB3lG38Yc2Hj1+64zyT/1n2rv1815YK1RPahi4Sbrw/3t+zhwlo3
/bfChJO3b364ypwLG5pUtmWSejrHOrVTfS8X3DP2fT1E2PLoFl9ZCy6UWv+z
mX1PQ6Gao3V/CatAx54kwkN7BCoTLblwsHOpxxHC/nc+/9tqxYXQHQueCBLW
KlirGk94cJmOUcU7cv86Wz81Sng474zRfcJVTnybpPdxQa7cdKsF4csXuC82
EeYIPqGIE+Z918/3v9/nP1mrf3mE1L+aq4/jX/L9X7r+93rCkpH3Qz8SVuN1
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
cqaI1PsLM4cwt11dILw/tPytCh21fQf910AXJOqMevuS/kg/X7k6m3D51R7N
o0qkf/iZ140MSD1Frgnbokj8edLJrib8N9HbQEiBjhGKO/1NDLtgdMHG/m+k
31Y4jyXkEz5b/UetWJaO/Kb+AZK7u8CkrTLvmQyp3x3cs96EBTgq6hdIvx5V
sQ75Qlh0q/lWkw1k/9eHzMWMuuDeothrMqS/bQVu9NgS/sT/6MEC0v//Gjdm
hhIumxdc+k2Cjlp8Tf9KCatNfnhbvY6O3KarKn2E+Y0aWnLF6WgvUhzAZ9wF
6duZexLW0pFq03hZkjDf760P3oj9X8f2HU/V/wYAPEIZSbRDUmlnJCt5UiFk
hFJWi8wQEkm2SFaoyCpZSUKynXuVUVTKLMk951xkK0oJ/Z7v78/363TvPef5
POt4vWISFZd2auxGK/64IXoP+82digs2SujjRPrt+yuYREDiZjlVdLztjGPW
ciYRNTIlqIJOWrZkSzn2q7u6kmfl0G8Wrt7fJswkStQSojej9340lvyN/a0z
Ip1zOVrgoarGZnSU1LeN83h/+4z6BC2EmIT2OWkrNnpzdimVjP2x/9UesQZ0
xdcN4t8EsX+uC3+bhfb5MrxaDf1S0P5LEFo3rXJT2hIm4aIfW2qFbnW0iuRH
p+1a9VYRLWi1KzFIAPunqGrEUvSu6owbi9CSUQZn+jHeZ7++jb3Lj/FcF1hR
hWbb+Q3vQS8sL14Uh54X/fjyCx+TOLzfoMQeLbJE+tBt9FrOrTLq6IldByNM
0ClhOuw1aNV918o2oplHPqlO4flXGx2l//EyiQ3XRzNa0P9uposPoqVsnQIL
0Ekf33j2ogWVmiEWTSuP/aDQhPCcuud/10tv3JlEl1AnR63Ql3V+nVmG36+v
GPhIF/0z5I+uKnq6ZUmjKjrh7uFkb7RBqOFqObTH75376tGCpar+u9CmIueX
SeLzPTKwdJNGcws85YhEh6zOtFRCf75+Z5AH42ORppl/BN2wN/JhNDp3bU/j
GbQjnwznFoxvzZXzywPQByx6PjWjUzyCx3PRNfwa0/54Ppq9PiXd6IrCd5sO
4XnafD9TvRLjE6+Su00Ez1vqopqZOfrZC903E+hjNns+56IvpUw2dmN+iIar
h3Liec3v8u5rxXxa78F8aIOOffjCYQjzr/iVztajmE/X+ES1F2O+2sZXc7Sg
MzIvycphPhuqqe88rYHXP134k4P5nyFYLZauyYKjbiu3rcX68vYT+lagjfkZ
0Skeg/UX1/SyL1aHBXGfayqXYr2GXK2Y9dNlwS2+rPztWN9r9O0u++vh/W7T
C6nHfvJP7J/bMiMWDLSc7fLH/tN7PVPV2JgFOidz1A9if8pbEJ2UbsICveO/
Fn7C/iZWYnTJ0pQF4eM9BUexP1fMXdlhZonP+zSMd1abSbTMvN+8xZEFBEeo
9pwuk+AWO5zEcxHnWcPK0n96eL4cC3VHnfH8KngdeYywP4zs//zOjQXqs7Ui
S82YRGZ5+tXOqzivxFVbs+2ZRNGLctn0CBYYqb8YveCI8Yr98DIlkgWPaa1y
iYvYT+++eHU/mgV9Ow17A12x/0TaZt6NY8HDiPD6X55M4sr+D/wh97FfyYZ2
+XsxiSexz5SvpbBgTN3+IedVvH/eiaWX0liQHPTs7/A1JuETlnPBKAPj93bu
/tFA3G9OrhoceozXJ0vkI4KYxA8Bk+v1T1jA9/UOJxHMJBpC8o+kPGWBjJPc
Xu4b6GZdu31FLCAlK8VXhWF9/pxW4nzOAqfvW7XEwpmE2gHtvS9LsN/1OYdx
RzCJrdZFDLlyFuQHl2gOoM/xtn9lVbDg3l/DqKpb2M/bTDTDqligXPZDVj2K
SXS5btlRS+C8PDF3fAKdlB101ITJggcHyfjb0ZiPRu3/vtay4FHp7PZnMZjv
rW4hPXUsOK14yWVHLJMo1+sWPtbAgq/W9XmJ6NJF+rlVjSz4YTPJnkH/eBq2
W+IN3t+Zd5sMbuN8kLKI8GnC/galXnfQHWEn8941s8A3b9/3FnSOBXFtzTsW
5Dz8/mgeTZlofDd/z4LRENaz9XFM4sLjXfMJLVhvpn8U5NFpx8buN3xggcWq
QAtVdID9h7qJj/j5biVtJXRkCdN7WRv2764F27eiRdWny7a1s6D9CC0rgK4s
UAtT7sB5+CP6Hht/r7bh/viBTpznA8S9QvTJFvoPdGH9rFvo4o4WSnZ+rvAJ
4ytXZ74dfeP9XenNn3Eeba9+1IHPS1nJ+vF3s6B/zZM4L/SNqp0Vg+iL2cMe
QuiJKNkZ4gt+fuHuO6kYz8831MyjenA+J2ZpbURn20z+NfmKzycS0pOK8a+S
lpwX6WVB82rBgmXoXblhoU3orbTfimt4XhHUhSofFu5/84sdv0YyCTenNa83
kfi8Qcr8yuipoZ1d9Wjbd8Imt/D8NZV+rzpHscBb6GJmF+bHeJZz+S90wRv9
M+Lo5YcqxoNpnEcd0Yl3Mb+ivL0notiYf3kHht5j/t1bMtWwuI8FcgWmpxei
47Zv0/FFf08ZOiGH+Vq9MvzZCNo2e4u0ZSiTmDlD7jXtx32B84xmcAjuG+el
VlajJYY/zGRjvsdFvI8SH2DB4l1Hn/VjfVx51KnZjhbiPu7AiVbjnly04xvu
H/zb5UUDmMRHNwtrX/SKFhFrXT98flmV2dWDGJ/e/O4HPvg89Fe5PUMsaKRV
mkuxHsszNA0uoxPt3IPfeTMJ6TqQe4HuM2oK+3cF5/PGKru9w3jd2f7SWrTp
N0sdD3RgvYO5ItZ7kNBDwWL0gS5Ocy8P7McNy07JjmB/i5mbTXbH6wu0HC+h
fT8eqXzlhvHXnLpShH47veu++CUmseKK6G2lURacSeY9cAz7ybfH9lLX0fYN
tVxhLrjfhgbW1qEXW99p53TG+d1VstxiDOdlo6+xFvajWFEr7Ty01YqL7TFO
OG+nvwXOoW8d8orpxf7F8eT6nNE41lfvlxd70E7G9yfz0DJTTK9IByahZSuR
ungC70fxJ9co9j8v0k7eHq18eHhPjR2eZ4TnjMJ33N+a/XfLoJm/t8U+Qvfw
sx/k2DIJZY4y1sofLLjg+vb5FvQzDqNVUej6Wzdv5V/A/Y1b6yzfJM7Xq6Z6
KuiAXTKDEeiJb/Nr3tlgf/b52Sk8hfsb7wURe/QioxUmaeivZfMn+dFRvRcC
ZH/iPs1kLi6xxnhcNgt4jR7VWQ8X0HnF+91tf7GgrHtk5Xr0TJ6fB/80C0Zy
1uf2nsf6GS9LL0Fva1JfkoM202gRuvCbBUX7B055oW+eqv4s+gf3Z56TjwzR
MW8/L/uMtu+RXiCLXntdtSFlhgUvfsxeX4P+GMPNZ/cXz5t7kQwfmkPwyoDS
LAtOddpuWIiO9l/gIDSH9yMUdIYLHXGUM3EMHZfg/WcJelHnTu/WeRZ0LLn9
az060IAtQPzDeTX74LQKWlj8kUnhAhLauceULdG/uUQMHnOQoJq6PekW+rX1
kt8EJwlLYfRHHVoktsujZyEJUXr6mrz4/Mo+iWWc3CRox7jHnUAvT/cvluYh
gcemrD0ffSjljLH1IhL0hCy5l2J8gyuMg9IXk+Bu6849jh5Yk7ZTmp8Er7aA
qot4XhOyax0CBEj4ple+8xd6b8ou5uclJORIeJEbMR9GF7RteyhEgsqrosfj
mE8XrhYo+60k4UP0Qq1yzLdNHlnPuVeTMHnQJSsC8/PZ+rs9sWtI2GprN6ON
+fzb0+V4hSgJh/Ud7bdgfZSp9qprbCTBusMsXBrrVWgzhxqvLAmbRyNMHXBe
QkhCcbMcCfUt4l25vvh+O3s0M1aeBK3SPXf2+uP8cFdoE1ciwWibgoIn9pMw
3+GDakDCBbLcSwf75/K3L74c0yMhXKBeuPAR5ofg1fLFtiScK93nVpPJJFZG
9keetSPh/i81z/osJqHy5JZuiT1+/4BvVl0O9hu+pB16TiTMyrV+83nCJIbG
qlJVL5HQFFwbfSqfSVxO2vjawY2E+buWcTJPsV/7yV6IcyfhhfBJeFOA75tL
M/taL5Owf/3O8NwiJrGDesFedpWEq+np5wyK8X2Z9PYX8cH4vtAcH0WXvi5O
XnqNhBqNtr/LS5jEdWPJ4GlfEnoNih1S0DENTfb0dTyvyVQn8RdMYkG7C/cb
PxJMYw0285XifP585fGNABKMW1/3eqCriHtfrQJJCF46LdeFPvbsmphsEAmp
PXwb5cvwfVVq0G8ebTly+UUYunmTvURDMAn7ZFx+taNtJrLWRYTg/UuYjq0r
x/Nr2RCjE0pCkqtonhnaXelzCvcNjOfbdJXbaN+ROZsqtOP5U3m16MMrs/hc
wkh4zzq1ZASd1HeoQCychKC30W6CFbjPpCzybkTf8zkztu2//w8f/jDK5SZ+
f/n5BDX0YOLMKpEIErjDxH2Pop/N9+wvRmswOiqN0VQbsc3wFgnrTy+zN0F7
GP/hHkI7ZGml6KMzFXbO+0eSwNWYfekgulBYGFZE4fWerQtk0DrF+35loSfP
pp1fhbYLazmmEE2CeXJX6W+83+iRY/4v0Q7WzDVt6CGn0mf6MSSkf72VlYsO
OFgt3IXu8PHy8UYfPEx0nI4lgfPz5heH0CJBobv60Wtmf3ksRnPuXnXE8TYJ
8eccOxswvh87/EzH0d/GZOcD0J91v95yiyNh6AHFq4iODoxa8xMttCp77QCe
nxUnn/SVeBKcbnC+VUKbVglVXE0gIW6tV+FnzAfFvMnYWfTOffYbvNByJ3aU
Xr+D+b2pQDoL80erbGNe8F0Sruzmb/+I+XZ8Kds+OZEE+cEjyjpoxQ43L9kk
EvJt75VUY75G3g5ObkRPbyspTCxkEv5HnBfM3yfhzQ4+vh2Y366FVeM3U0m4
/Nn5chjmv7RnuZ1CGubfkwp/Gutj+PO28D504b0UjTisn/7fro4GD0g4Zq91
oDcX96u6bT+OPyLhdSHvWWn05x15E5KZJLzlSWq4jvV31PVQ2RR6aUz5AdFs
JrGZ+zRfdjZ+X8XcoCnWM00dFNbOI2FZ01HVnAwmEdqtX6v2hISCZc5Rfx7i
+5sqV4tyPsY7/LtQ+gM8v3fLJA8UkMA0NYjkTGMSPImc05HFeN34Tt+ZVOx/
a1qnnj7H/NLjn2Sm4D4/H2rQXkKCoKTr/K1k7Nd/H4/LlmH8Bs2tp+8ziXf/
RNbYlWM9eo3q2aA3lLTaZlSQEBCp6nI0CfNXKEpqWzUJ5QIPeeoTcf97ZmXv
XoP9ueY46xD65NijK7UECX0S7vx695jEi7KiG861mC8CrMKuu7hPVHPqNb3E
+LSdPWyPFjq72GZnHeaHlUZ94h0msXHKmuNvAwnZ8plzymiJc4377F6TMJw9
+Kw3Ab/folv+0xsSRA5c+HcT/XvT25d6zSTUdd3kUUXzpObV1L0loZa/mvwR
zyTm12yZOfCeBNGfqx4XoA/q3dUmWrCfrbjt6YZ+m6zkd+Aj5svATot9aBvG
BadXrTh/jnZd5ENbbkkiddpJqF46WdmL+3TdFt2nrR0krNruZFL5376eL/7A
qouEDYoih1LQT6+IhQ1/IuFZXF1syH/7++lWmavdJPCeb9PyQEf5KNnx9WA/
d+60t0d3jDTO3P+K/bNn7Yw1usaj4PluFs4zvynWBXSGpxdHJYn9RmjfH2d0
m5XroiM01n9Wlprv//f/TQntbBImBB49jkXvei/lfb6fBNmVr+WfxP13/lsC
vw9gfwxZ1NqM3vCGx89vkISUpnmvSfS3bQNqS4Yxv8yGVkng8zI+Ho5NGiFh
bcjqNCN0d+gizS1jGC/Os7M30X/XRO0qHsd47OUVfY3+MFi6Wu07CQqSQt8E
MP58Ams+NfwgwapC78gJdGLrUnXDKRJ6ttdLZqJfOr7Z2PmThHcDRzqN8Hxv
q3o87v1NwqWph56F6CVB87/PzOA8lpRauwLz49a1slWsvySsFtb9NoQuUDu+
pXOeBGlfw7cWmF/TfzY36y+goGnNqh2taLPJ8ZyXHBTscvzwohnzMSsnzO8R
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

     "]], LineBox[CompressedData["
1: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
mT+r9fvgg7GIHwdarePObJIpPr+Mz/53A45vfiXKyBL9o7zzFPry3IMv4wf7
4Ob27WONmB9Mw6BL24/0geHZ3tOpmE+5fqqRiu59UGk6xTuH+XdR75NZmkcf
dNs/TTZDk05HnZs91weM49Xs/+qDyMTnE/8F9IHG94Nu8pjP9v8dGc0I74Mv
0tfzd+J5soZj1OtLRB/84Ls47/OJCdEG/U3fb/TBf0OzLQUf8fcOofIb4/qA
oJbdteUDEzyTVK9qZPTBkQOTZ5bKsf/N+JUb+qIPxmXYnjX++/cnji5y2171
QdZhZw0x9AaGnF1TaR/YTJnYu77E/gaUXgq/74P+gupZ9hIm/K7yPBhf0wfX
BM4POxYzIWAxUVChrg+WJgLtyovwPu911qu2oQ/47ny9sh6940/x96WWPnjr
+PQ2vQDvO+wcNoFdfVBVIsuWkof5teuqvSitD2ikyWoetIPrYGUZvQ+o62+p
RDxjgouKcerSQB+IFjWdvpaL+ZX6xfXp9z6Q9D5wlAvNlR7gaj2Mn9sfPpTw
FPvdqrSXz8b7oOn3/cyiJ9jvfbRwPDqJ688IWW2AlqwYH+Gf7oOJHI+G7v+Y
wLn0yTN0rg+mC+btJNDElu+5exf7YJ3VuPaXHKwvytVe80sYjxLn7vug+TZ0
8dWwMyCYsP8X8TETpjKDJRU4GRARtPp7LPqwWpD2HS4GzAdtDDJDK3z39lpc
xYDI8KtZ/GjKf2IfPXjwc535k8RHTHjEZa5H4WXAvlbO8iz008TlRRN+Bpzq
JhV4o9sldNkqBBhgF6qwywB9MWyjg5ogA3QuWNhsQmcWv+bMW8OAtVmb52ez
mRCypCMqI8yA3yx9xW70Ru+5hIdrGfDwrSztM7pAWfnSZhEGFF9v5ihGr86W
JD8UZUBOHin9AZqisbFYZj0DrM6GxSWhPwh7rORtYIAQ/zfSTbSpnRtxpzgD
Uu8+PX0DXb7Tc+vHTQyYEMiVi0Z/NvrKMt/MgEwQFIpFK49UmXZvYcCObopA
Kvqqfd4GHykGvE8h8T5GywmQXTlkGJAk0vjnJXrPj+dy92UZMLn29KtadGZz
1AnNbQx46cCh3vvveX8fLhPkGDBt/+PYAvpQoBWv/w4GyJG0hf+tx2j0ov9a
BQYcr9DR1UW/3aa1s0yRAUqiBrVuaP3aEJ0Tyriet6/GJ6DT+LXiOFVxfts2
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
     "]], LineBox[CompressedData["
1:eJw0l3c81+/3/zWUti0aZDQUWQnFISq9VZRQSEZGRlSkkDKyZZe9N9m8zI4R
qaSBSkup1yaziOJ7fW6/269/dL9dr+u6znicc67nNmvX07ZLOTg4PFZycPzv
7//7Nw7//3+SH8zjvi2OQcuLx9VPzv7W2FF/aD6I8HL73e8e/CcIVhP5ddsW
xsCx57/kg3LKwLPF6UDb7Bj0nAjOaRozgr99R1azfo+B5cqhrctLzeBWU8Xp
H9OEW6SpHZxWIJqj/Ml4fAyaNvmKHDFygN+8x594UcfgXItcwSddD1iqr+3s
MTwGEk9uWh8f9YRuY9dZo6ExoKUWHmyr9YLQvKvMN+/H4HJEmrL52Tswu+91
/r9nYxB/cpNm47ZgeGSjJXnpyRjk37sXuH8hBNgda2897xiD15svfLVnh8G7
in1uN5vHYM3HY+2fZu4Ba3qraejDMVjt0ZuQMhoHvy6u0WwuIv6c+u9KnGgC
bBAf20HLG4PQyckN9qb34V14V4lg+hgMysscPsROhDWPapujIsfg+LOfB5fd
TofWAHtdidAxuCpz0nfkbwawq/OEIgPHgK9wt2VWeyZ0qde0dnqNwcOCRR4u
s2yQfnU37IXNGNzex6NX0JsHt887/hQ5PwYa1SoKnxvyQV+wqnrUiKzzGV75
UFwA9jrf9NmHx2ATLfoZb3oR/NIoUJ89OAZzwpdm9mQWw5fO/wZOKo6BbYRz
+7OCEuC/Nq16f8sYSLmNPhvqegiwm9P3Is8YCGR9fPv1cxmUeGbF7V8+BnUf
73R5/ikHbtHjKf9+/QSN44PZuREVEOz+vSGX9hNaB3bJX99aCUq68zqb3v4E
uffjh39VVsKropMT+o9/wgTjb/fQkSo43P09sjL1J0ydvCLZe60a2BeVWwYC
f4Li4ACOCNWA6vGO/cpOP0H+PNtGprkGrE5FhHXo/wSm084iQctaEPBziXVT
+Amb3hhtk15WBwXXLz9X4PsJlMknjdTcOlA9IZm0dHIUphM8DDp1KMBBpXg3
F43CiqlP94d86mEj1XC0wH8UnheZcgrxN0C+2/R0zrlRsLzqfNm1oAHWDPdf
bJQdhWSuDcruyo1Q13PiyeySURAcCf9R39oIu59mGLj1jYDPhpCwD4ebYFJM
un1fzgjozZ5ZuNPZBGt8nDas1xiBL5rNc8rVzbBMXOKi6aoRGPxcYN8n1gIL
z6wW7frYQJ8KWLUhpAVir2l/N05lw7POkBevGC1gcEFk6uRFNnxUyoe12o9A
UuxrvMduNvyS+vy79f4j2K4vYjA5wQJ3BdbLP98fwZ7vG5xHKSz4bjY1/Vwa
4Vjs67ioWyxIPdv0wsgJIanQxWeJNgsOWni/bslDMFLBaCcuFgyWjejIf0Bw
Gz+f/+sFE+Qc9G9fWd4KVNHj9V1xTFip5cHDKdwKz6PKipebMoFzdMB9XLoV
1s1NCfWLMUGxT+jRKbVWsMpIlzrLYIDFzPTlo0dbITj0onVVBQM8EuNmx061
wuCUdulSLwbcvbvyxCXTVpi1M91qr8OAhp2HfV5ZtsLZP5or/m5ggPPwZmst
21ZI/7596OMnOnQlHLR6a98Ku36HGoqW0EFW7bFsoUMrHB1x0P7sRQf+Q3/z
X5B1e33hl9LH6RBssafajOzPuJ9iu0mUDqOXalRsrVrhcf6zgdYpGljPXOOd
N2uF5Z0DVruf0eDPW2n+PUatoLDTq/9SNg2CFsb5OU+0QnKz7oNQHxoc423l
iNFuhTTZ8Kf3z9IgbZ3M2HuVVqgUu2eSqkyDBI9XGj/2tMI1/jCeXEEa/Lf7
dXW9aCss+wvtdbNUEHuyNsmUpxW29xzW+fSJCqbdu4d7lpD7wmofbOqgQjRn
Rab4MMLpDYnTXiVUsLuqt/PUI4RDJaJfFhOocFJlA00yEUGH96hCuT8VXBI0
X6a4Inwvb1GNvEKFtdtfhlbpIDhTbtakWVPh+e81hReFEHRtKdTvRlQ4sUyE
Xkp/BLxiumnWemQ9Wv7i3dpHMJzhDpu1qVBj1vKKfucRMKHpGa86FSKEBTJf
HHsEvyyDPh5VpcKTrw1yctxkv55wWfN+Kjze5DPB1d8CuetFt15VIfbgujun
ElrAw/RersMBKjj95O5cdqYFHoRtNszUpMKB/xhcItwtEBmdcDDkKBUmRndX
GfSSepDktLYzoMKvMdVrKmHNUK/b1qhqRoXMAbueF9rNoGfi0s/hQIVxSYGS
dfNNgMKHuxuuU0F11aD9r/Im+PZTV846mMTXVeKZv3UTtH0enHMvo8LTNLO6
YFKfK4JNUt89JudJXfz816kREg3reEQ+UyFU2PsLr0AjTAQpPNrORwNzv79t
YpYNYPQS+e/G06CsysD6zSAFMm2CgKeBBo8lRjVMr1LA7mCpl+IQDTSy2QFh
XBRYZvvz/MJeOtQ1ffEck6mDlcctaxq+0eFj4uRK9fM1IP72wKutV5ggpnJ3
yxajCti3Me/qZC4TLlYkP5B/UA77rKU4Ot4z4QVt4/bFO2Uw81C8+zmw4Hlj
N+/O46UQvPJpT+hKNnRct7UsfFoA3Yq3Cs/uZ0P2HnAQyM+HHULL766yY8OI
ok3ePv88EBF4/CwW2bBxZZdT6IEc8Jvu0VWwJP3pWYHVH/80EFKcujMTMALb
pY8Jx51JgR0RVc8G8kbAr2Jfh7FsEixhizDzv49A3bD648mFeJCx3Kt9d3EE
3D4aXuKajQXBaxuaDYVHofh8X2LLv2hIudnFXXdkFH4oY89muzBoQ5z/z3QU
OF03L+d5GgTJWfsmXzuNQtFUYV3d8QC4qO8Yd8p7FCT3PRAWp96Gv0vFKt6E
jAIj8DzXlOdNWKJ5dLtl/CiYR3ByHzhzDbjjI+pWpI8Cv79a99SMI8TvOfK+
P28UCnwu7NbtuACVpc8jP5SMwqUdTavVMg+DkrJDhVDFKKRyau/Yu1YLpc5v
ONlaNQrp32JS7hWZ4ove/W9o1aMQ88TyzfMeW7Q64O+WTviZxaiLXYkLLt/q
vDhXOQpm1mdvtd24ilLFT/u4y0eBd8ju+OlXHpg8aJw6XTwKealb6Jc/38Ah
oUDtJmKPZHSIiU2WN6a0p764mfG/+VJa0LDFF717NsHhxFHAt74gIn0HI6y8
7ihEj8ISvX2vL0r44SqjjiPGwaMgfeKPdO+8H6qrRC88vjUKzCNNb7xr/LHm
QF9d7LVRqPYSPpJ7MgDfz7jz9DmMwhuHpcoRzwPQ7xKHQtJ5Yv+I0/2APYH4
+pZ35cypUYj2Z88MXw3ED9sFYjlIfhSon55wZQbiy00b93WqjoINh3yzcW0g
5nl/Pm0sMwr2f5fY760JRBXmxqkOsVGYT9XFqbRA5B6MsN/CPwomPwuWL3EP
xN1Wa49eWTlK5nlRSNn+QFyool96MTcCd49Z9uixAjBaQpqu8XMElm7an781
MgD32gfxvvk2Ah56jGirbQEo6DzlFTswAq8fDu49VOiPeY3LWWFPR+C8Ruin
IXF/bJI4btPZMgIbJpfc+C/WD50udUjqVY1A0FUlHb+ZO1j7pzhfsmAE8nuG
/14xvIOKVRMp51JHoHvWedP4idv42nBgajxmBKjer+Mp1Fs4nBY6OB48AhM3
uWZyXH1QN3x/rYXvCNwLsJr4PeKFB0S/y4DHCLzV1Gl/anET95a17bzvPAKn
W0/OrO3yxKMdgc/sLo7Aq5Y/7iES1zGw89+NanNy3uzXho+e7tjZKffhltEI
/OQXNvXtuIqKvm0DXSdHQK6L/r51xRVsFtl5/57uCJi+FnBJCbiMRSn5wf2H
RmDURlnPiOmIK03Gzj1QH4GGZwkm7hr2GNnMt2RAZQSKdVe+8fK3QcWa2pow
pREw4avUP3vpAn5/rjhZIzcC3w6e1JQoNMFanqpb+jIj8Om6heK/W/pYpC1q
bSQ9AonbU0x6SjUwu89lunXHCLTuzdbVfboUZFpMBsKlRsCzKUn6Ac8hSHFd
O1UmQc47dPHWp/JTUHqA8564+AjovPO8oRRlCsI3/A5+ERuB7Jc2/GcGrODM
G7ex96IjsGJ/n+C6ADt4OBc8y0XYYnfgQO1pJ3jd38V9cesISIiLLtsk4QZq
vYNWQ1vIfmHFuKryq6A1svaeK+EbdU2fOAw8oNi5uZmLcH3ZJtWB5Tcg/814
bvpm0o+qBttZvV6QHZ+SKkl4mpa4m1p2C86ceJ8fuYnE0+KTff7pOzDspH63
R4Ssh8nSDg/6QXGMRn2TMInHhOsg/70AONX0UPnsRhK/wwncCQZ3QdFftjpa
cARitbji28WCoXy33V9D/hFIvZUec4u8/zlC2GIxPCNwlGcxOZQZBp1Ws/H7
14/Aj8v9ixHfIuAq15mz+1cT+1zdGdy0e3AyNmyrHyfxJ/NAt6Z3NFzpzndf
wTECZrfOZQiFxsBvFQlWwx82WJldqN2RGgsiGQuKUZNsONzMpbFYHQfC3pvP
eLPY0BQzyBB7FU/e4woU929s0PXzW885ngA3E5eevfaODZ9PyApu4nsAhhyG
MQ6tbNj8sWrvdcsksBxUbTCpZkPkwagUr9BksBU2t1DPY4NbIuegQnUKnLnC
6ylynw2rlhSYzH5KBas9cvSJu2zgtRdblFyRDpf59by63dkwM3DejF82A/SN
jYdyrdmg810ujVc6EzbP8UzFHmDDWavIG1uPZ4HRjxdfG7ezwf/U78uRH7Jg
Zl59lJ+HDbG+JkuodtnQWcBuTv3OgquFN2f0buRA3/OECyPPWTBhsVrlx98c
iH//5H5lNQusQ94NXffNBYfS895sPxY0TCald3vmAeczA/VQBxaId1Tm7B3L
A1t2o+vPkyz4fX7V7a/W+aBppFVlu4kFEoMu3XEaBcAX+u14zhIWOPbPrjTJ
LwCXUcXdi3Qm/Kgx3k5dVQht2gL/2dcy4dKkgtR8RyEYZDy6nJbKhKq1ds6G
IkWgH5XsdjiQCWsWzT4JOhfBrquj8ypGTBD+6poVvqQYDksN9xRpMCFwiWc7
/+FiGDjf/fPtTib8ym01rQ8ohpQXqYqFiwxYxynfvnSyGCDFStNphAEDW7NX
BW4rAUrYE9udHxiQdf5CWb9eCYzdExoe6WbAJJ/45WG3Eoi2eLams54B5xf9
jqVEl4CU5b6TzUUMsFMujh4tLgFXRSXpzykMKNZa8u8JloDCPTsl+SgGjKhE
dAm/LIEDec8E2wIY8HPhZeeb9yXQ6rgQFX+TAZL/JqK+fyqBHONNHlVuDIhj
5qSpfyyBgocClWKXGMDzStOxr68EZK5dP/rDmgEtpuNZiV0lkPD1o+ESCwas
Su7X9q8uASsNKpe3KfGnJKU9KLkEMiSdqw3PMiBJWEA13bsEXpSpUiJMGBAc
f8u/3bgEeK/fMOAh6yF/3xbOyZbA8nNSrO5zhJPXlS4sKYGSANE7VeYM2Bb/
0r73ZTG0XZ0y67FkwCE/f1+nxGIQUd7Ix2/HgLPNZpcGzYqh6XfG3SBnBhji
45gtIsVQaZ34SdSdAS6R7+ygrwgUxHaHfvRhgLunrItucBE0P3ujVRPEgP1m
f87oKBdB3vTUktwYBvjRAri0vhbC8iuv35YWMyDhiu7cbalCkN+lRPMk3yv/
NgaMunrmQ2ygs5T4HANozQZyjzjyYbng38zEtUyw8tzf/eZuHlwb4RWiKDLB
lJZn/i0gF5qjOjRkQ5lwr+M4j8SZbLjU3WD9+RALOkKEWk5+Twb+lVquW01Z
MOmsySmakgRd2fbBUldYYLvp7hPZU4nQTNmRq5HOAgsRjmTVxgSYpeixZGpY
8KzORUb/cjxkmP83lvaUBec9K4+9F4+D1WbnQ1onWZDV6rDfLyoa3p5jrzFa
wYYkNbUO75h7sPGM/DlZYTbs8ToveWJVBJSsgSafg2woK8r6cGRdMKT/s173
8TgbbPhwJDglELpPzLcamLPhjNO9JQaK/hBr0LvS6gYbTMMM5R6s8IZEu89T
o4FsGG/NpKV7XYfTd1r/Xo9mg9JBE8oE11X4+eOd+WwyG9QOPDfSsnOCAtvp
YNdcNiRXDe7T/GUNMrIVOz+WsoFzZpm2UIARyKz/KHKghg0tgeUJvs7KsMpN
3Sa6kQ2Op8+lSsVq43Sexo7P5P26+unr3uq8s3j1waUMycdsmJXPlmzztsGG
9Li1Tk/YkHn5eemP846YqfYzv/YpG36ffmK+0ccN1z5aFr36ORu+2krOsHOv
YWX741Y3wl3HGwx3FV3HzyO9M2PP2PDFppxRFnITc0ROFEaT/WMfC7N8tH1Q
P2rxhxk5X97uCVYN+qLVmPoqXnL/u+LdzbvwDv5sUK2mEvsOBi1Jt/jrhzoG
fMY/iP3rX//Z/0QyAMU0WAObatlQU7I+6LFKIAboBrkml7GhEpJmn6jcxRcR
F1IvF5B4Knd1npIKwhV7J+fzM0i8VypdHlsIwrvGSWqnH7CJPldNqHYFo+3h
tr++99gQZSum1u8dgoEhyk8PkP5d3fnl5CWxUKzZ8vT3fW82HN+zqa64JhTf
ci5PTr/ChrAovsqTqmHYP2/hYWnPhmgH+5L15WG4R9eQxST53qevFZ0nGI7W
t2Dk6GkSj8VEg163cMw3uD0ddJQNZvzvbQ49CscG3tGZKqKfnB/3HOsXwzHw
wlKLd/Js4CnqeDW8LwKj47bMLpB58Ftw57PLVhFofXdyXnEzGxQiQlYtC4jA
YK59f2+T+RBw3JWtkRKB3CbGVDbRa9B4sU9DcQTeHCqfvf2XBWYjKs84qiLw
yEb6U22ib3Omn2pSZQQeytyhrsFgwZ+qNRz/ish+04JAjy8sEFZ915ZCzrN/
fmHbWD8LDlda6HwIisD0Lutv5WTeXGt7qc3rHIFrh2q/NbWzYKVZnH2sXgR+
FLK7J9jIgjUj1/5Ll4rAZ5fic9sryf4QnsLLc+Eoph+t1F7EAoGHcRnyz8Lx
tK1ArmA2mUcbt3KtSQhHzSszla3JLLDxdP/DbxaOgqkXbrbGkXn3tUzdcjNZ
Z5d6CESyoLOJOjf9PgyPCk0EPQpiQU3L9kt90WHIx6c723CHBS/eDoROa4fh
E+ORAE5vFhxanF78bzIUn+dvNU33YIH+kq3sjpRQ5GZp7fRzI/NSl91zVDMU
U+p2iRY7sWD1YJhv01AIOu7/OM9vzwLPd4c2LfEKwf74ZxtarFlQ5GM9N7s+
BLvcvh5Ls2BBtd3SYv/0YOz5JKFZQfrR8K9372/tDEb6ZWG1cWMWVCV56j0v
DcJfV/MPmBiyYE7SD0/sDsJcLmnuIX0WFFDXdrJy7mK8Ca+J33EWuGZciA4X
vIvbMq5JzR9mgQ6n9Mc4ZgC2ONN8O0n/W9L0RY92LAA/8r/iiibfs74H3ofx
5ZLvGfnb79eokviIBy8TOeKHK18+ul+xj8z/XeE9vPfuoNW+uJiDCizI5RX/
rpd5G7sLlJZNS7NggF9ozbkgH9xyqum9qQgLfnwr4Czu98A4c+3fTwRYoLLE
qthI2B3NLGY0/3GzIDbm2CU146u4ODa+tXEFCzamGnM0XHdB1yjW6JUxJmi+
/hLPIXoec2/fvszDZELI9CkRvzAjPL7x4g/vYSY099HldIf0MGLARehRPxO+
NplxOVfwgwSLU8WJwoRnK4oL3S9fgNxNAk9elzNBSEB17XkHG5AceRu6s5AJ
D3Rq1LnX28OW1tDk1kQmTHlf16vfexlsBWyyzb2YYCvjFbSvxwNctn78EneY
CfxBf/sEzO+A2iYTC21NJiz8OBr37McdSD0/rHTqABNuRrcsbbPxA/UuV7F0
BSZwhU5MrdP2h4YGy6t0WSYUMPdwN2f7QzZfTUjObvI+YaQVmM34w4CHtXTg
djKvWqUfnPINgPL/TtSWSzLhJ1+L3vaKAPixd/6vmQQTFILVvjAHAiAwUfp8
uDgTAk4qbHMcCwCV/WcpQHhdoOlJ778B0CGS4uZFWKHpnMEs4YkXeq4HyX7D
v484O8YDYHpdoXAQOf+67ZrAx+8CgDe29owJuT9lzTbD0coACLqSHlBO3k/9
ewxz9t0OACn7g8GRxN5N71R80yAAWsIyOPuJfxO7TkpNJ/mDgVdDnPpR8n6r
X2uWS7kDy42rE0IDmJDH+Wr2ZawH+O/c/6AvnAmqCyJSjE/XIGufaZpePMnX
Pv6OJRuvQkKkUn9xHhMYnkuaRJ46g4nKqRyrp0yoaejq+oznoGzb5Q3n3pD4
h4c9EnM6Bdy73boOf2SCAQ+rz3NMC3jEUma/jTDh9HTWPp7rmjjU+8LIYj0L
fnEMyMyU22Jqy4vVqoIseOSTt29osyOe8n379fUWFnyVUO/bG3oZly4KCG/f
Q/Tp+tpGq/Qa3vycdfQt0fcZdynPsY8euFIrTFOW1INgb0rfw5U3sKF9Yrhd
hwUuj1sbVxv44FSw+o6ZYyxw93Y7tNHJF68GrnBvJ+/hk9e1GsLgDmaiVuI2
Uq/cD96MFB32ww2Sk695TFjA9VjEIfGoP25UZvREk3p/KWTeufpwAMbr1uSk
nmdB/axhfZN6IBZ8Zg4rWrLAyBguOcvfxTptqWAj0j/OSgS6/hANQvsJnb8c
F0l9zkYOT3AFY8QPuS3Ktiz4ObIn5NJIMCaxTOR/Ef69QaB9+7MQTDobwtKw
I/GYcQtakx2KlSGaVvyEl87rnOdwD8Ox5908nuT3S+POHJqGcHTwEBp0IOcb
WQeHfuKMwI4T/D/Z5H4f5fslNZ0R6Cdk+WWpFQsiMr23+N6OxPiZ0rAK0s9E
r7RJaSreQ70dlVtmzViQ0nLt1spv9zCpNY/r81kWZBZobqWFRGH9vOOitRHp
b/R/QTcFopGvU+Bn5CkWbOm/8DPXJhoTr8j+sjpB5s/EzX2c5dH42+Oz7Xdd
FhxMpJmUzkSjkMYqiiDJh5OIMHeZegz6PrHz4yD9LOWuAkXULwZvHOnzziP5
uyrWsmNjewzasz65rVYi3yMbepzKOWIxz7VJTUmWBVtnIpIXDsbiA/EbuGMn
C4zPPKOIesZiz9v7mbfJ94xsr8XEIWosvmHsfjrKT+bfu0v13sJxaGMYe0CV
6O3Q121OU3pxeE6me503B3lPWiq+X1cah+KrWEXSP5jg2x7EGDKLxyTlTI1L
n0h9O2896RISj7f3WlILSf8anLDh+1Ydj7771Q01OpmwebzuL2tlAqb9Ovhv
fwETBrr80xUKEvDH6+vLZzKY4BlHCyp4kYC9HL673pL+taAQvqlqKgF/coqI
LIYxodDSq6NR4z5OrFs5p3iFCW3Sq4+Hv76PfGap1rJOTPhrVTb18Nd9/OVc
Y2psy4SmJVUfEoUfoOPS8sdypkxQHtl7ES0fYMw7Zf8NR5iw04nnyzP2AxxR
OX3ghhbpHxyHhCnrEjFaMi13rToT1PbEtB7Ym4jvTC8drlFiwsMQnSyqWyI6
xF50+yDFhGGjoiPho4m4W+SH/y3Snz4zl6ZuWJOEfh/lVLREmWCnI1o2sCMJ
b+3y+iMhzASW05HX/yySUPWyksmu9aRfpr7PbG5PQgGZ+YO5a5iQ/tF8m95g
Er6REDqquIr0qxW3cwZ/JuHtry8KQpYz4ctRNxuqYDLa7meWH19K+vOzhiTz
Xck46JyuKcZB+l374KMnaslYftYsfXKeAW/errK+aZqMHPRna8f/MODOpfXu
7Q7JqDv0QXduhgFBD1/HLL+ejPL7U2e4fzNAWIv7ibZ/Moq7p35VnGYAp+1r
tbuRybjsc+qo9ST5fvxaK/7yQTJObdaQTh9ngNwGz86dWcmYTl/gVBtlgFRv
0E2ZymTcEylikcIm35O3qVtGKOR8/gNGq1kM+N12IPZbSzJ+lVKNDibfPxOH
/WnCHclIv7S0l4/OgNStI4tZT5JRQU2NWk5lgLpca2jw82S8M7eizfwHA67f
5P7+vjcZX67ovLDpO/me2xDLl/c6GVUl5l+OfCP3GzXVz/clY6DmrMGPrwzw
tbJq7B1IRsO3lVt/DjGga6fWa+N3yfjEq9Xz4BcGvOqZutUymIycR6Z/+X9m
QJ5voHL9h2S8zWWYPfSJxEdu2Z7MjySeaU+uGRIe5jAvD/iUjOt97M2HPjIg
6pn5hiufkzFz9YmjgYS1xt+HXP+SjM6yOYLahG9HVCpnDyXj2lTnrM2ENTx0
ly79lowra/IreQiHGQTH5Qwno/5C+lIJwj7TmlrxP5Jx6/EcjVOE2VmXF77S
ktHD/dW/VMIKYjIG95nJOOcs93gFsecKdfBA60gy3vfZyBFFGFO6lR3Hk7FW
jHOVMvHnZu3mzRnTyXih1PXiN+Lvbu+JktcLyVhTvrTgIYmfZep5z6ObUnBi
k9LnVpLfADUm798bKTiLD7UEfzGA2ZgYpR2SglLi91b4Eb3sv1Z6VD8xBQ0O
KZhH/2UAxzstz4zGFDwzl2N5cSUTzMR9Gq1XpuLbkMgWxdVMqIpPMODbnIri
AzcdV61jQtfd4DXH5FNR4ub9+ke8ZD7uVW0WOJ+Kh2ZFMzdsJfpdJ9bxpj4V
dbi0PF+JMcE7J9fZ4FUqKpzZXBpI5v233mOCbHoqfrqu5NZC5vlvJneRhlAa
Umof7FIn8zxw/q3KR9k0jPmqmJIvQ+Z1aoW++ZE0tGhst5Ah831gbCZywD0N
PUx5ZY+QejaSTT5THZ6G5+z7a0GZ2O/8iU8rOw2devd8FVJhwhtb43dX69Ow
ccXP0h5V8j7hzjBQ703DPe2vFc3J+0iyPZ+d8D0Nvfb35z4+SN5jdsGvrs6m
4SXB9P+WazDh8YnRP8/WpuP0HYgUBiYEi944eV8sHX8Fuz9dINygCacvK6aj
FM+DhHry/vpRqKxadTgdC5fldB8m/ai6brvYeZN01PcrPZtHWHw4VNTJIR0/
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
RD9nkqJYGRercL2z1t29RF9vuF6a9HlVoXz56+QUwv6ZucdvR1eh4Q0FXQ6i
x7YWgc/peVW493DPU3PCPJY3jss0VuEzhoNlBeGJb3brt/dW4fOR5FNzhBd/
u/cEfqtCs3s6DNVTdFi7PNrh8DRZd6l3v0x473jhvM2KajwS13b8AeFbvzz6
PwlV4/Ue9Z5qwrK9Iz6lO6sx4oKEcQfhuBpsfalSjV/6Nc50Eo629yrW1q3G
hEutyg2ED+bE3+Y0qUbrrpvu6YS/RIi089pWY8mHsgh3wsl/hQ5eulqNpw/8
WXGAsE3wnoUVt6sxkNP46gSxlyNy3zlWWDU2d8ZcfEBY/VbIB5771fjuo47P
HsKSazpNfDKrMep9k1UFic/jwcSpncXVuOZcWac44XF3qoBQdTVKBkxcCCDx
XTf53eZIUzXezPYYf03iHz9R0FnXXo2/pJK01hO+lT161eFpNYqde7HrKMnf
W86v++d7q7Ft/t5PV5LfQ/0xO5l91fgz67RnCNHDw07ftYrvq5FTmlUVTerX
Mv/Y98GP1XjjWuWDEKKfvmV61C9fqrHT4by4G9HXxfiXPtrfqtHmOfXMUaJH
c7dvsOp7NTYKnN2/nui31vLCtPyParydIDv4WJsOQa80HyBhaoGNgdMhOri/
3WxSQ7j48f76JVp0MPyPGsFLWG0jSy4E6HBg7XjDp+FqnLXV+7agTuIb9jBa
gNzHOuzz2/YgHT75jk4iscfw32B2ixrpTz912V+IvSk7JLasUCXxiewo8CD+
PLt1Kgv2k371zN43uL8avddJXHHcRwfFTbrjQq9I/iXO8ibI08Fz327Ljs5q
rLzEeythLx0CfcRX07AacyKG7EJk6FBo6FByv6Ea4/ccEzm6i+gxNCmxqqQa
m/p60vh2EH2MbwvdnluNGad28vdL0uE5x9UG1dRq3LOy5KqCGB3eBV7SNAgn
+vnn1eomSOJ9NlWmg+jnqV9MJIOPDk+yOyi1ZtU4GlPeZsJD5mUi9/7Lp6qR
z8odtq6lw44y7sDDB6vRmCtl5uwSOoSdaduwlbsaMz/ov55k0eBuKv85ztoq
VEhtXb2JQQMdfTd4XFSFqT0JVw5RaWAXmZGVkl6F4ZFTVdFDNAj3+1xYEFKF
7NJ/Sir9NEh36f3bZFGFcwVKPPavabCgs9+k60wVbnyu/SaxlwY9a4QFNuhV
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
9LcK1aLwjkpJ47t8eFvieFVGvBYdnz+urJLKh0wnFVPOklqkscxNbGkKH0Y1
/IXpUrVImnItfuoWrrf1j9eq/VeLjm46mDuazIfKDQemL8rXoh9N4sVDSXxw
d/Ru/rWqFh06vz9+6CYfbne1CRzSqEWVJwaY3xP4ILX4iK+tdi1CbfwVkzf4
QPl3oM9JtxatX1lsK3idD/deGnA+G9eiX1s61NZf5UNwdta7INta1O1X93xn
LO7nFMdlUrtrEVsMFvtf4cPG4nHT5r216P7x+kMPLvOh5atGeOH+WjQhePLm
zEU+ZJ8QLc87WYuKTkfPe4bj+CaWr7R5VIsO80ZzPc/g50Mje6LyatF+kY2c
faf5UBfwbqixsBb5CBddtQ7jgz+HoZtdWYto7c3io8f50DAgFaLUgueXGxA4
5seHuydVk5hidaj/dUCdmi8fPtw++UZIpg7xj0UZMg7xQfsoJchsZR3ymlJe
ut6HD/ofrGbqNeuQ2NPV6Q88+NBsySlX216HcsJ9JEJ28+Ha5M2b76Pr0OSq
hDOf7fnQL9yVZxdfh3pFjr/WtePDhXe6VY3Jdejg/buLmTZ86AtJ1f2UVYdE
b2qemLTgg5vf+duf39Uh6Ghw99bnw57Y17dPTdchmqvu8lg9Prju/ORRPleH
XrdlFubr8iHP1c9uTLge5RsuE+Vo4/7lcbu9ZetRLee/dnNVvJ5FLM4ig3pk
8NAzPF0G18uRTyznoHp0VepejeoPHsRGmTQDHVt5X+jOah5+P5Xa2d9DSPRo
149nVTzQvCmappaBkLRRpdOSSh5UW3jt+f4YoQGbjpvcch5Y7633O1iMy+Gc
Rl9jCQ9897zckUdE6J2wzt8TOTxYLpeg/3AYIbK3YOOKJzwwkXS4nj6O0LFW
NXuUzQMqm7bu+hRCunGzbJUsHrQm/+sxm0dIuP7KI+F0Htg/blo3JUZAw9/m
1tkl8yCF3IKMFQnobKVOnnwSD9x5Etc2KxFQRMcxp6GbPPDKnY4yUSGgFTF5
t+7c4IH58QBleXUC6v4tdo13lQfX91WMxawjoNDGwsS3sTxgNTzVstMloF5/
zX3JV3jw8a0EX1SPgAaoumEml3kwxOZYnTIgIK6gx1BkJA9Sxxhmo6YEdNhn
bol9BA/ufe+widpMQIda1yT/d4EHDcvlXguZ4/kN3kgUnuWBWb6j+/xWAmrx
D66oCOOBTsyiRy+tCWj0ldjt06E8KNZSTZG0ISD7fXmP1p/kQamTQVDADgLq
8jrclX6cB2rRv8rF7AjIp3hjzc5AHtwMbO9TciAg3+DSCMEAHlgQkpbYOBKQ
zo9RmXf+PCihXHgYtJeAWMIuCat98fWjauNFzgSUr5RgRDrAg/EPJsuV3Alo
U+DoskNOeD1MOeEfBwnISfJONteRB4PCkYdlDhPQiSGdR34OPNB/49dl6EtA
/c5Gwp67eBCEPl+N8ieg91eEtijY8MDYajEyCyKgV38fW8+b8qBbVebyo9ME
tOpSY6yjCQ8WX5hVEAnH878VE8g05kHSCbe5s2cJSMWlbvF6Ax44f8hqCrlA
wL9/j5YbrOOBqVFCaH00Xn9lqF2INg96fwfDsRgCGrfZQX+qyQOxLpN45Vj8
SzTn3EZZdZy/6XVBeXEEdOz3iT/tijxwvWMYr4N/qUL1kJqYAg+09BrVtW/j
/FS8XWGyEudjz+evG1II6LPQii+JsjywTXcWPXyfgM7Rxgv1JXH8O7xsHbIJ
SNI9PuzYHBeYwY56R8oJSNdY49uxP1zo+XVdz7OCgKihRf+Cf3Fhr32Auddb
7LX7E0KnuCC/1mb1jXoCis/Ijo77zoXUx19yrzcR0NTaS563hrkQOtD94ttn
AlrpPkJ6MMgF1RHp++5fCcg5hvimvI8L5cmRop7tuD5sk6lz3VxQK51vGRwg
oMSg57z/urjwpkTKvGgY1/9zCSeDDi68z7ykfnYM16e74aGQNi7cLv7+Y+0M
Ad3UGtcV+sKFEKvVanMiRFSg/zKuksAFl+4Xu39oE1HiDtNVv+u5MNt4c7Xm
eiKKbfAqtqzjQq7VX/4BAyKKZNXVtVVzIfOaj0jzZiJ6vsv3gtZrLoiFJmWQ
7ImoiTTx3fEZF4TvfWU5HCeimzNZSwn5XHip1OZ6PJSIxg1uvzDO48LFsuMn
Y88QUUj9BV31J1yI/JewKfMiEemmk1cpZnDhxEfx4KOJRHTY44uR/y0u1Mgc
2/jzORH92RWV9SuJCwdPDugfKCGigQv/lFISuaA162v+ppSIjq2Cf6QbXHi3
U3HRlkoi6qvfHqF/lQvmzIvsFBIRnZLY1dp0hQt92UzKZSoR2Xh3nA+K4YLi
2nNGPu+JKG4L0yz3EheOF8nV930iImnF5e0rLnDBZKDdYy2LiH5XHUCvznHh
dfO0SnIHEb074qi95ywXfr9gaLC7iEg+/KnyldNc+JzT+NyJQ0TJZtOXFE9x
Ia1CSP4kj4guMKqFXody4ZeQXV5EHxFlz+mt5YRwwcPius6BQSLKl3yYde44
F/QmNm43HCYidYENXIlgvP7riWVTI0TUOqp2T/8oF0ZE2WK7xomo9yDqRAFc
OKTQsbXjBxE9ChgrcjzChaRn4L1/kojEkuYeHfXlQodDnYHmNBFp9W7K+3GI
CwMNkgdPzxBRMDlzIuIgFwLl2wJLZ4lI3LU/WsCHC4zuL/e6fhGR0u7YLXEH
uLBpuN70928iMkjNURLz4kK79JUnYn+J6IXw+ZUJnrje3lvris0R0Vxns3Gc
GxcqLBlqXf+IaIumn43APi7IiLR4ls0TkT7l9Z4IFy4orG+wjRAgIeHMMNtx
J5wPywLvjYtI6MNG7fUBe3G/GJKkedjst/6/mA5cWF/zoj1OkISEPhYW2e3h
Quc7mc3KQiS09cL3Ug17LoR5itfqCpPQAXOvRbd2cqEhJ3EsD/vW8hLD6R24
H+O0WpcvJqHfes1W3jY4f9V20xewoxITjAnWXKhD8sNt2CLlJ8XVrbgga3jA
Vk+EhH78HaJdAS7YFxx5HIW9c+GvihY437lL7lCx7/nESWzZygWBtgdvxERJ
qPx+VuY9c7z/Y2eKbbHdv2vqjGzmgqjs2RUx2Fke9T73TbjwdFkGaQDbv6BE
dsCYC7vLHjmsFCOhMm3iN1MjLhAen22zwV45H6nQsoELtIl357Owz503ETfT
44JOgvt3CvZkiFPUY10u6LtodHzH3j7s81/QWpwPT5bhdnESEj31wOmDFo7H
ht3Pw7B547Vmupr4/FCOKnmCbS1x1mZQDY9/czZEQoKEEloMo21VufDKYMWG
HdiPjCTSclW4YGO+I/4a9ig1+8GcEhfOBdf9fI9NX/k11WMVFx6G2M0sX0JC
zdPvU14pcOHajffi/tgSn7pzxeS5YMZf9qwam1aUbVi5ggtkYZH9UZIkpL2l
6sMSWS4kOyzdP4jt/qmu5PAyfB7G3q04uBTPt7u47400F3LehXd3Ye+8f/Oq
mBQXZizPbT0iRUKrnU/fOyDJhVVFvlumsP+qX9Z6KYH3Z7nG8o40CbU8jxRx
EcX9eMuzr0+GhBQb88LyFnPBwGR0e84yEsrI23PvpxDuv1ZdjaDlJLTb5yGk
CeDzsUGlUmEFCckWIW7/Pw6YHrSTWPwfCa16eubcpjkOzOvmqs5hZ4dlPWX9
4kCx2PmyFfIkFCuTcGDdLAcuZiuXblQgoSH776aR0xyoPrPnrJ8iCXVVpd9R
muSA9gZto29KJGQVUq598gcHpNpeJVqqkNA+8/H/CGMcSEhOOVOwGtdvdbFW
wAgHQHJVXI46Cb0Mzz30dogDAbPwfeMaHK/ID0qSgxzY7t7qy9TE9XjjqUNF
Hwdu1dwj2K8j4fP1RrZ0LwfcfvQ86TMgoYuEfKmgbg5cCppqnDAiIbMVrxyI
nRyg5zjpSpuQ0I2SMx7nWBzIfpvqc9aMhGSij3kMt3BgMreH9dMaxz9QRWB3
MweO9+2wjthBQrfDvhQWf+aA2MmLM0vsSKhINWZZWBMHTtqkXzngQEJueZq3
FlM50Cmq9TLLk4S4w9pmu8kc+Mq3O/jpAAnteqall0rkwJwq9abkIZyvrr2T
GvUc0BURevcmAPdzl+139yoOKEbOyj45Q0Lf7CMuzhZywIUqLHMmhYSWZ4z1
/7vNgZf/XTUYb8b9SzA+FXALj8+89LifTkLGIk2nPyZx4IeQiWg7C8f7DaUk
M4EDj1JHLUrZuP9t7760uMoBv5gCZZlxEnpuKFzw7AoHiHZsFcYkCTUQn1dJ
x3Bg05K4XSkzuJ8+p05wojjQxnAaGflHQqnjxKS4cxy4ZjxbrL6UjCrO7xQe
DefAn+bcbakyZKTEQWbuZzigPPT+x09ZMjKw2F6hGcaB2AQp4VRFMjKEqS50
jAOaJ2a+rdYmI773ewPNIA54xweGKeuQkdu+pzMJgRzIoB7RXaJHRlsOuSBn
f7w+M2ntSiMyYq1/cqrdmwObdbvo2y3IKL7q6w63Axy4nObyPRXISCFW93Tz
fg7E50f3frUio8I12RSKOwc4damCmrZk5Jjjwbdw44ChRZT8JjsySnJ131vp
yoGf58RazHaR0a3Kg3P5ThwY2J+tssyRjDYMB21dtZcD26xsq/v2kpGG2Vj9
HQcOdOxKESp2JqMZgnFixC4O2H1cMyzqRkb+O603W9vg61kiL5YeIKMw3aiE
cmsO+Be/dgv2JiO9xwdWq1txoKfnQ+ZbHzLyWGukOm/BgRLX9Pc6h8loXH/N
7ZCtHNjT7a6415eMfIdLd7Wbc6BW4VxvgB9ev/XX8lebOODgd4J8/AgZ5QYt
DVxlyoGQwYwTBwLIiLfr1+m4jRxYUWP4ZFvgwviXukeNOOB5p/r5f0fJqPL7
7UIPQ+wXoW1s7D7l3Z1InwOnYt5HPgnC82Vrn9fewIHzMf7D+46REam/WWBK
hwPNqTqZj4LJ+PthbtZrHQcCR5vTjI6TkVwML5SgzYH1Kxzb6rB1/aaCNbVw
v3kdqoUQMhoeqxpLWIPrZ0L3xVts19wxoVF13P//tUivO0FGTLesF85q+HzZ
6+aYgj2ZodWxUoUDfa83L999koyuyZYci1TigEjCf2cfYd/Z31HQpcgB4fni
E4PYvy/LZW5T4MDr/3JD9EPJSNxhwP7JSlxv5Yf4odgPakbeLZLjgGDFiF0x
tr8/86ffCg7Yu8ZLc7GLdG171izjQNOK+MztYWTEULHIjJPmwJTLiEModtL0
7Jb+pRzwMvq95QF2Q8v97QUSHJgubingYbd9Gl6zTpgDh5cnUU6cIqMR0y/V
CYK4vnpGPO5gv1PjBQ4JcGAwZKTjNbZzibfR7nk2SN2OJrKwT1p6qJfMscFQ
MS16Hjs5krF16V82lAlIXVt7mow2GtRfP/mbDfae+db7sBkr06iGM2zQ/u3w
rAJ7T4/KUOYUGxxnI0WHsYPnNrmI/GTD+oLbz9acISMh5xrBUxNsuB5g1e+H
ndnkKdA1zgZ3vwvaz7CfLU3cu3OMDUvlR96PYh9OyvhZ/p0N216s17YIJyOf
mbtOiUNs8OUvix3Blhsxl579xgalR+/1HM+SkeV5XeOAATYcGp+erMSG2Hfo
ax8b1inyNLXPkdFXcaG3lnw2NJ9fs/wxtvelEZVSLt6/dovw6vNk5LTUcEaZ
wwYr3+KdBdjhqHrxXDcbPHM9WS0X8HiajpYnutjgJhRZHB5BRtV9nJ/dHWzo
tznVrhpJRi3vlb4SmGyYCeDpp10ko3TKwTmjNjYwHUwaDkWRkUpnTcFTOrbL
3/vGl8joau3kxaQWNux4mXnndzQZXdfd/EygmQ0eDSNSo5fJiJAQ7XT2MxsG
rL2DR2LIqMsYaRxuYsPOwI3bJK6S0ZrQwdItVDZ4SY+6frpORvdv51Nfk9nw
DzkRFBNwfN38XNaT2KDGYbw7cxPPb+D6XgWx4WPzpbN2yWSkZRvRI1bNBhO5
beKX7pLROVH3gGtVbLj8LeWP1n08HkF2j0AlGx40M9y60sjo6ApLnV/l+LpS
38+gDDJ6sc62crSEDepqRmKiuWT00IvbGFLMhivknLPi+WT0TTpIcbiQDfLO
9zzknpGRZLXLwW/P2BDexmhyLCKjpX7ePfwnbHhYHL3U5DUZPZr7r5F9jw0x
R2Pe5dLIaPa+hjfcZcOLX4So4EYyiloS3vQohQ29UXsmzD6SUWtCq6rXLTZo
lJf5jbaQUcC8KP3LdTYkOrmTcrrJ+HvjmUJhJBse/ZLc3DJFRjEn9KQEI9ig
2t2zjTNLRkPck6e8zuP6HfqwaOIPGdkGd54UD2fDxYOD32UFKWj1sQ506AQb
dr8q6N4jRUFfy/gxQ4dwvq5vuWOkRUHChtsubj7IhsCYtHWK6yhorjmvLM6b
DatLnJr+6FKQW/5As/J+Noxpa1cXG1JQ1PK//TYubJhOog282UpBk0HCTUlO
bFh7JtbVHygoW/jjj1ZHNszGy5uKW1OQ3OGwZYd3syE/pN/RfCcFPT5gPx1q
wwaBmMVGus4UtPmTt125NRtW1sWl3HKlIMlnFb8mLdlw8hkhe8CNgi73d946
a8GGT+QO9UgvClLQSVpz2pQNCStX2yv7U5Cog5XUq424f0p6juoEUNBnrZL4
70ZsuJtp57j+KAVNG1+wPKqP66PSwF7qOAUFiGcUuq9lw7NlTrd2naYgwuVg
/VdabLjmbJjNPkNBddHK18U1cf43PB8MOUtBcUc8G2rU2CAddiIk6AIFZUwQ
7VevYoOgxdvV3y9RkPIZReULCmyovWDx1/QyBS1aPT/bvBL3T5pQ3fkYCkou
9eqPXcGGo34otCeWggL5Hzy+LWVDw+On92yuU9DsrJOBtSQeb9XEVfsbFNTk
0rozS4INynt+JtsmUFCSOcPBWZQNa/5reLUukYLuKqnalyxmg0vTk/UySTg+
DT+zRIXZoOJ4O2EMe7DwciASYIOY5Cb08BYF7VIVb970rxfSui+IBtymoG11
fq9//O6FiBYfaZ07FCRhuHFn0M9e+JB3yj43hYL6ghlk34FeaNgjssLlHgVJ
vWkdUef3gmai4t8f2I1o6Y4+di+QBcvvJt+noHObxPJOdPSC/XwZ820aBTGG
3buTP/XCHa/Iyf4HFHSlRlBw2ZteqLSeX9KVRUHqCt4jA696oSDwtbz7Iwqa
4k7vJbzohbNDCX++YGedFrl2tqAXStI22FCyKcjMXizuRwa+bh1TWfGEgi7p
8tfQ03vhlgxrr0kOBU2ExBm9vYevnwgvrsQm1RZcv3arF5Z0WyajXAoKX7cj
SS+2FwTKjL+N5VPQkQveIu3RvWCZHqJ85ykFfVhv/zvuYi9Mjd3bv/EZBSV8
G9Pmh/cC/Zd5S0IBBY22mxx8dbQXonULck8WUZCDSNbpwCO9EJn6RcKkmIKe
xTNylX174Z76iNyiEjweb7nyba9eABWxmqIXFPT+B+VjlEMvXLnftsSujIK4
xY3y5rt6oY1YEgvlFBQWly80a9sLpwqe51i8pqCTO1tDz1r2gu26N1qOFRTU
c9HoZbhxL5i2xM8SqylI7+jsv40GvdD4rz5k/B0F5cjsOzi1vhd0iuyGNWsp
6CrHbe6sVi+kRrgsflZPQeNjR0vDFXrhj2Pdxt9kfH++0VFjOZyvAzeSDlMp
iJf7Lf3H8l4I+zDz+hONghZv5iiGSPbCeV0dndpGCvpk71DmMd8DwivYOwa+
4Pmjwg//5vcAGrM4491NQdYHVRlSpT2w122ZwNM/FNR53W97R3EPELwcz8fM
4XrLlhjPe94DJhZ+gT7zFHRnumDeMLcHMgTP/lUUoqIoV++Jzffx/RV2255I
YJtPjU5G9kC7af+dFwpUlPLRpT3vfA9YeM/tS1pFRbFJPvou4T3wcNR27Jgy
FSWEVGwtOtEDPVtPSqmpUdG8z64vdod7YJ2/31zkWipKG4/6YLejB4p2/nAm
mFJRyNXLkzyrHmCPzLhGbaaiGDvqxuhtPSDwEq03MaeieiGJza829cAWBznh
RxZUtEXu3dclOj1wOEeuz9qGigwuzye8lOqBW+ffjjKdqIghEKhhvaQH/twt
8/N0oSI+c4TGEO0Bac9FxXRXKlK+zQqeE+iBpa0hWQR3Kvp5s4K5d7IbbLd8
vRTgjcerHN8vxeqG/v+E1nEDqags7VPxO3o3fMjcdUM+iIqI5xv7j7Z0w1eJ
qv5dx6hoeVWKLfVDN1R2TNfnHaeiaMsdPUl13fBPOqZdK4yKPKeUmR553dD7
Lisi6gIVvSfRT6x80g0RVNv88xFU9KsrNIqV1Q0+5O3JoZFUNNoAcofSuuH0
885OtygqOnLc9kV0QjdkV17f8+8yFZmD6lXxsG6Yyzx27nM8FS0aLp3nhHQD
NX9x76PrVMQLdpCqPdYNi9Y91jt+g4ocmjaxwv27gbbP5NN8Ao7nZF3lrHs3
vLrwa4dsMhVtHjeattnWDSPSDx/+TKWi8tjI2oql3XCq/8V/2tlUJLdtn/5p
iW5obS9hDWCPtWZv1BftBjTU3/n8MRVN8a69LhLoBsK35FHdHCqarNyf/3Sy
CwwJKZs351NRzZ71W7Lau2A+3CfpfBEVNR04g+SfdoEGR+3pUBUV0XdNnGnI
6QI/qajdX95S0YfJ/z6FZ3fBslUPSiuqqUjkYIN1U3oXaHpySddrqCh9e61Z
4M0u0I4LjrFCOJ6DvVscQ7ug+JFm5NIGKqo+fXCwdVMXdIiIrV7MoqKKzU62
Nzd2gcz3AXOZdipyffzXHgy74MuhCaTUQUWXDF8feqrTBV5Hn42ZdVGR+N+L
N/2Uu+Dhsv6t19hU9Hdmu9BzwS6AI5/DXAap6M5uSfbTj53wIDkiOP0PFQVt
8ciwbuyE3RKTNoS/eL85D7f2UjvBQiz+8OAcFe2/qxskjzrh5lyH1lYBGlJL
W5KbWNYJy2itEVxhGqJeN4m6nNYJe/LuqmpJ0dCJXr9D3MOdIOstcFxDlYaa
rH8a2ft0gkKXsKGTGg2tHyXYlO3vBHM7F82L6jTkMiJoHufSCSc+Bjg1raGh
0tzQia02nVC+WInsso6Ghv+83Tuq3QlydU9Lxgxp6I+kCjF4TSfkau0/NWNE
Q4XmV+9/U+0EayX1wL/GNKSnTz/4TaETLt0zeDlnQkPewf/WzC7pBLLshcgu
Mxq6ktp7Zd94B5yi/ZsRtKKhikN/7PtGOmAgLH9lO7bP6hn184MdQIlg8out
aeiTqX7/I24H9KY7RO+0oaGMC22V0/QOiGluuuu+k4b2rSRK3m7pAJmbXYuW
29EQxZCydu3nDjhoa6nyAXv38+oE74YO8Oz1CDPYRUN2u8vRx+oOiFu6Sbpt
Dw2Z+gcqBFd2QOnbhujzDjTUzHPjiL7uAPXjSl/+c6Sha7TxZJuSDrB7RjKz
30tDWVL/ZInZHXDrREZ0kjMNXRive1F7tQPOhg36prjRUAN6vON4TAcszj4i
tNidhozGe9MVLnUAO6zs9jlsucTM7WfPdYBJ2ki1qwcNvXatLNQ+1gFByTF5
s540dHns/ESYYweY9xpUCXjTUMqT2BG53R2gSSwO9MF+YLpNsXZnB8xU64dX
Y6taic8KWXXARF+GdJgPDW1aKa6eYNwB242ZqzoO0tBapUtnAuQ74ONdS6u3
vjQkfI5+6u+KDpiWPjMo50dDc7LyR1OXdYDhicYb57BnTvw1qpHoAOdsnqSZ
Pw3ZB83uEphrh74t5DefjuDnW4Nmb/1qB4Wx4RzTABr6tU42W2m6HbQzOOY5
2KaqE6yNY+2g41dKuBhIQ5HCzbv2c9pBPcBSzy6IhiKic6d7u9uh+ycxmYA9
knW0NKCjHR5d09XZcgzHQ8HO42RrO9z4vsJ5UzANBRl+mg2ntsNN/i3KnhAa
2kHUF/MubAdD3krCzzC8/sLQwOXP2oHsZSuReIqGuK6ULe9z2yFe8FS1xmka
Ms6k+RpltcP83OWd3mdoiDidbb7odjt0HCmYHTyL63nS0e5WeDss3fpnafhF
GmqrNmvedqodPm+J0NGPwvW3+r3e2Ak8X5GY5wi298TfK3uPtsPuA0erQqJp
aFX6d1Npr3ZQXJS/+toVGrrOqB29De0gt5PnLnCDhkZnVqZabm0HukJzEwOb
+ywp8Mfmdrh6J961JIGGlj19X+lqhOPpkWnnnUhD54gGEas020FYtS2IeouG
EtmvvWok2iE3M3Ho+X0aemydM+zaxoL0iUPW0nk09DSBWdf0lQXN3yL6h7Ev
x/ub23xhgdqh8CBaPg0dmLbbuOk9C+bTXB6GP6MhpuNXQ813LJjA75fyQhpy
DLnik1vJApXKd6kXi2hI3NTMWPU1C7wTV/laFdNQZ9dqlnIJC1Z9ze8nl+D6
mHdkq2azoCgg2ze3lIYmL/SZ5GWwIH9DbqLzKxq6c7t7rVY6CzjTF43msA+W
+HTr3WHBEb59rX05DS2Rv2hqE8sCl+5kr8o3NPQ++rNeUzQLaPFLBOwq8HnU
9K3Y5SIL9ILEGxjY2mW5G/zDWfC2fsuTvkp8vhxp+ZYQyILlImWCbW9xv8vu
L1vhzwLVKsWNdtU0JKj/nPv4EAvGf2mGVWL70MRDqzxZIHmuVeb6Oxp6GFNC
3O7GgoF5q6hB7NV0o5BmZxbsWXxfwK6GhmT/86ga2sUC8ZolYb+wu84t33th
Jwt8fRqP76nF+deeXC9iwwLLEcjJxN5Jli5Ut2DBesci3oY6PN82k21lZiw4
s1dN/Az2noj9opamLHiwUffha+wcTV+Ng/osmCL1mOjU4/rYtfrEd10WiAY9
9ztcv9Bvd1lRa1nAPOlkfhd7WN7AV1IT+83mLyRsk7NhgllqLLjkNLRxDHuc
0Falq8KCTUTOZXmE+2XlcFSNIguqVx2gbsOOWWnusHslC5xNVVb5YYfZu67p
lGXBc0f39FjsVu6nuWAZFhyl9zk9wd4ms4/xW5IFFAHSoRrsmb25z26Ks6Bu
5FNXK7bIg2snFEVYcKexgDOI7RHVqlkkiPOlcO7GHPaXfaeazOaZUNb/ZliK
QENkr51ejX+YsJgmqaWCvb1j12fPWSZsms5y0cV2iPR9rD7FhOm1dt0m2GyJ
RJeRH0x4eGTrp23Ytz+/41eMMoHc95+5LXaX3oTL5WEmdMaWbdmDnXzZIsPu
GxOoIkuHnLDvMl9VLetjguwPbZ992BWzQc87OEw42iD+wh17OuDBsbweJgRK
LZnwwFZYnjh7vJMJYatabDyx3ULzXDaymFCqbVK/cJ2x3+PsXzoTcIbPLzzv
JKh3kNLChD7j0hsL499kVUkkfWZCe3zuEhfsM1fuX3BtYkLhD6L8Xmx3wVNP
Fd8zYbdd/fvd2A+eydzmUJiQwvPYaIdd+sHd+DmRCTKFu8JtsDVYFndO1jPB
qtsixxI7yJyet7GGCf9U3rRuxa5x3Rzyu4oJgv5/NMywRU7fG0BvmLB0XKlo
IX5GDOUVcWVMuPm185IRdsJdtXH7l0xQn2yp1MeePSIWKVXMhKdPnEP0sE80
ub76WsCEddT9FQv5yErJTEnLZ8LdqNTnOti19olKXjlMWFFs771gy4+9e5Wz
mfDmbmj/gl1fHNFhZzAhvvmu93rsIfPJotx0JijcHWzdgI3KopqP3GNCeqK+
78J63iKpDK0UnI+TafKbsCfkm0W+JTOheDN5qQW2KOXvf4U3mSDG/Oq6EA+v
QC7t2HUmnPnoM7eQ7xN3uuR1rjHhD+ui0kJ+Ana4LBmKYcKNz00kv4X8nEaP
Ci8xYZAXsSgMO1y1+ktQJBMyxCa+RS/Eb9PQE+3zTIgRar5xGztVcfmy/jNM
mNX7MZazsB5bIdX8MCb4uMWvr8Q+PJPzyfcE3l+W5p6P2MNkrsLqYJxPn64D
fGwx8nvhrkAmfNq2Legf9rVNgbce+DNh7rLpJUUiDV0cuBot48MEzrOPw57Y
ezUe9DXtZ4LFmyzPi9jt2vEj8e54/Xb3fj7Gnpqkdf7ZywQlg8OsMez9FHVq
xR4mPOGJbVhFwuet6VmnUHsmfF514LMdtpVZ816ONRMuvNRcVExa+B4IpD4E
JkyEbMzoxd5/VYrtvJUJtlcOJ8qR8futwkOMaMKEW7nbLyZiUy9oWmeuZcJo
3EBqCoWGPFfPJPlqMkFT/XQsE/te8PQNbXUmNPGeFK6m4v1cTntYvooJOx7t
S6rEblxlv50qxYQO+hvBfzQa2pix1iJhCa4/5hFptwYa6qk8OrlHDMdbeFjp
JbYn3SOzdRETvnJclwe+p6HNbs6iPT/bQEvvwMaRRpyvXJ3lT360wabOwP9c
PuDvmZihft/RNqjK/5tejQ0NQVP8gTaQ/OmwM7mJhroXUTu+dbRB32RVzo5P
+HzccTxikNAGkxN9JsPNNGStsEessK4NlAv8w/1bcHxF4mKC3rUBgbV5Sxd2
mJKXycDrNthc8lHmy1ca+iF3YJj3rA2GT2U+rqLj76eaS4e6ktpAdGb1/BUW
DY2ltVzOTGiDB+N+y35hx61dXewV3waCJSqHQ9vx83E/dNovt4G+HMt3fwfe
r3yWGPN0G2hc9GlU7cL998N/hunZBsfo8dkhvfh9lJWh5OLWBjq2A+Vt2AVJ
pWc+OuP5AtKvb2PTkMD1kwTiLrx/gx5NUQ5+P7FPvdu6sw0e33r84Sg2oq0Y
q9reBkTHs/1U7NbhkzKlW9vAfzTDOpJLQ+erFRfpmrUBzyHpSDP2nhduGwtM
2qDU9C1Bg0dDmTEzx55swPfP3Z8gYjd5TYQq67YB6YNJqSQff19JFqIM7TbI
fZoWvg/bqHLWOk21DYIm1k52YFtepkSsUMb58HDPVOjD7zOvAoG7Cm3Q7Mlb
54a9WX9R+zK5NnioSkxPxs4t1hFOWd4GFW35PSRsy+iQqzLSbRBscO7XT+zn
6lMed5a0Qfy8GV+jH+f3xNrFKcJtMLf1qsoFbNWjX3qXLWqDLRFJwY+wF3nU
yd6dY4DJOefLCNvzGCVnxW8G6Ew88u7BbnLJvpk2zYB3GzyFfmP3UxZ/kZ9k
wKs7DWeXD+Dvh+RnoZljDDCbXF+ljS2sL3FCZYQBCRedm8ywN6fcbcj5xgCN
RvdKO+ylalmXNfsYYPPE/9I+bJs3R+8XchggsO6llg/2zx/q4ht6GLDZbk+1
H/bH4/0d5R0M6P4jaRGA/elNpcRmJgPG5Ha9O4IdT7n0oK6VAWzaHzNfbA39
lde2N2PPWtG8sNNLHT41fmTA1kTjYGfsb7+/nnFqZMD00ljDHdhC68zOM6kM
iAhRW2uKfTz2b9tBEgOKHM94rcH+UxOf2l/PgMjVfxjS2GoTOoUnaxiQpmpc
OIvjUVGlqThTxQCxpVq8hXi5qDziX37DgJF4sbskbD/1J6LiZQyw9NJ9n4et
R18bm/qCAWq/BlJjseWmlFyVihiw7H6+8CHs8NGTkwZ5DOijtqxZhp3L1SbU
PGbA8Pah6X6c35yXi3tss/D+Pq57+w77mu6EyMH7DCj5JerhjW3Q/1JqKIUB
3uR6bx3s7qsTh8/dYsDa8/wn07jeilY96L59nQFHvqw1vYk9uDLxHzWCASrF
i4Ye4/p1VI9XuH2OAXOxTvsDsWP+fQn0PMOAuMFTdF1s3du+d4ZDcH43PTd5
g/thCYfdJ3uYAV3xbbdqcf/suNP6LNiWAfIHy6RqcD8ujtvCM9mO46ux91wk
dvS6T3qLLBkw8GndnBn2GlM2N92MAZN6QSXVPTQk+fBjLHU93p/gAde6bvy+
+GzttVoWx8MC9XA6aWgDtx2GpBngE7ptfRH23TcbJCokGfBU7sepM9iN1K/W
u0RwfPMeSoljD97N/XX6Fx3c7ho/tcLnCa3oWO3WaTq0rsylLseOVv+zV2SS
DoZGHRp9+Pzp31rMfjBCh9k2wbJk7DfaMoE1vXToMywoGsXnFfkP7+TVLjqw
dri5fMAeiqoz3d1Oh+9PZH0KsPt3P//b/pUOZ9eeyw3A/u4uNvPkCx3IF4XY
tthBG5QKj36kg5TIqvh12E3l5PU/qXQ47jopOcnE75fUz7+rSXTYkPB5pB37
Iisz4jKiQ/2HncYk7GN7xgpsaulAo3r0FGPrvH5yTbyaDvJV3cNp2MFWoVKf
K+jgLWm4/yr2hSVLbFLL6eA++Fv9FLaTrcYa91I6KPrv3nEYe/uN8BcKJXTg
Ul/WOGEbdVWGRz2ng8bBdWOW2L2eEp968ulwtXtxnRH2ocTjFZY5dIC995W1
sE2KV+vlPqLDPUEt8VXYstv9jYUy6HDhqs35ZdgxgwEN/ml0yLAVPiiOnV7m
842cSofiK07lgthK3hn3NW7TYVeVfdBcGw3duPHgc2wiHX5b5535hS3bv+Iu
5zqOV5/A+2ls5dfKPLhGh1uRnvunsHVJU/WPYuiw3UxGacF/8nq0/kTR4Uql
h9DC/f6b1Vd5RtChxK5AYBa75btK1puzdFixe6fwn7aFeLsWyZymA7O+a+4f
dqX2cduQk3SoHJ7qEsLr+1Zqd6ohmA4TAukpC+sfeya9Xv0oHf7eoErKYOvv
FbwQ5U+HNVWrLVdiE2+ecm87RAeHmcJVq7Fftnx4r++Nrw8VJ2tj5/WkhnL2
0UE7OmHQDNuQHF9g5kyHuX6HF9sX4l0THpnigPd/402tA/aUS9cvsKXDx117
Lvlh33yXmvNgEx2kZZekJGEz53MnvxvT4TXxPnEh/w6eGlPWBnSInXIoeoKN
9i4tTF9PB7/GbvMi7C8XDy0fWUuHx3kq/q+xvVRdN1pq0iG02mBZ7UJ+Qr2W
31Ojw7+ZcUMK9iBN+tWAMq6/0vKyJuyI4TXLtijSoQx+RX3F7rR1MbslR4cq
guEVFra6uu16znI6vCgJedGNvUsg9buxNB1EGWUTHOwA/peY+CU4n9/5Vn3Y
pIr+QZYoHb6kXro5sLCe0D/rdYXp4Hvqv5pv2Jd2ezheEqDDE4I0acHXxhxc
vvxtBT7F8tbC/XHpGhZqv1qB4HhfemE86+2Ty89MtYJbUvWmhfl8Dj5lUn60
gnLA/K9ObMrx7bflRluBNGpsz8DOOq+xLWioFeKq3Vd+wgbjpm/V/a3QZ7XW
nbwQz01f7i7htUJOSdlM1UL8dpRv9+lthabYj6ML8UxPpPx92dkKwYeL9LMW
XLuULMBqhQiJv6WJ2GV+WRku9Fb463YtIAJbMOzD9fzmVvitVLIjYGG9RNXb
0x9boWsTZ8de7BRXowq7xlao3T1xYBP2tsjz/zKorVD2IDhaGfv2inWh34mt
oPL+e/4i7P8BMuQ7fQ==
     "]]}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"ScalingFunctions" -> None},
  PlotRange->{{-0.15617021724579525`, 1.}, {-0.17893662911407562`, 
   1.3783459893030843`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.724244449242386*^9, 3.724244474524508*^9}, {
   3.7242445070164633`*^9, 3.72424460553973*^9}, 3.724244651410385*^9, {
   3.724244686146175*^9, 3.72424469888448*^9}, {3.7242448371810904`*^9, 
   3.7242449122462807`*^9}, 3.724245053024631*^9, {3.724245102483182*^9, 
   3.724245193114312*^9}, 3.724245324195294*^9, 3.724245630248637*^9, 
   3.724245663385379*^9, 3.724245794565825*^9, 3.724258925291803*^9, {
   3.724259241985476*^9, 3.724259254009128*^9}, 3.72425937841775*^9, 
   3.7243976782475348`*^9, {3.724404873128778*^9, 3.72440489030332*^9}, 
   3.724405969556224*^9, 3.724406142960926*^9, 3.724406213408186*^9, {
   3.724406314792411*^9, 3.724406332858615*^9}, {3.724406390939886*^9, 
   3.724406398998315*^9}, {3.724512360602441*^9, 3.72451236581619*^9}, {
   3.724524676094692*^9, 3.724524689604814*^9}, {3.72452473627866*^9, 
   3.7245247906231947`*^9}, {3.724524840028174*^9, 3.7245248813328333`*^9}, {
   3.724532964916256*^9, 3.724533007730797*^9}, 3.724533093949366*^9, {
   3.724533125104025*^9, 3.724533162332218*^9}, 3.724587433052223*^9, 
   3.724587523119152*^9, 3.724587789486108*^9, 3.724587866289341*^9, 
   3.72458790583536*^9, 3.724603063379937*^9, 3.724603145458222*^9, 
   3.724603264347987*^9, 3.724605400245057*^9, {3.7246056125747147`*^9, 
   3.724605622734597*^9}, {3.724605687399352*^9, 3.724605695766099*^9}, 
   3.724605731281433*^9, 3.7246067106734943`*^9, {3.724607013966962*^9, 
   3.724607020691009*^9}, 3.724607208603807*^9, {3.724607396448999*^9, 
   3.724607409616251*^9}, 3.724678888253714*^9}]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.724607147538107*^9}],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{{3.724226963782546*^9, 3.724226985914914*^9}, {
   3.7242270324922647`*^9, 3.724227293642065*^9}, {3.7242273988833857`*^9, 
   3.72422752830147*^9}, {3.7242275729615583`*^9, 3.7242275739071417`*^9}, {
   3.724227609801991*^9, 3.724227640630909*^9}, {3.724227675755392*^9, 
   3.724227719110894*^9}, {3.724227820001295*^9, 3.724227832143565*^9}, {
   3.724227920296352*^9, 3.724227920447034*^9}, {3.72422800245056*^9, 
   3.72422804786582*^9}, {3.724228681353413*^9, 3.724228710171681*^9}, {
   3.724228774845231*^9, 3.7242287794172983`*^9}, {3.724228834326065*^9, 
   3.7242288736428843`*^9}, {3.7242291447217827`*^9, 3.7242291450831957`*^9}, 
   3.724229220030052*^9, {3.724230462019389*^9, 3.724230462584792*^9}, {
   3.7242318512204742`*^9, 3.7242318703118677`*^9}, {3.7242322432824173`*^9, 
   3.724232247455144*^9}, {3.7242323230272017`*^9, 3.724232371673661*^9}, {
   3.72424604099219*^9, 3.7242460646090527`*^9}, {3.72427260893999*^9, 
   3.724272637306562*^9}, {3.724272667738099*^9, 3.724272739939651*^9}, {
   3.724272866022213*^9, 3.724272874527775*^9}, {3.72427300750622*^9, 
   3.724273009993577*^9}, {3.724315253208283*^9, 3.724315271697968*^9}, 
   3.724315317289653*^9, {3.724315411357429*^9, 3.724315491428748*^9}, {
   3.724315646968643*^9, 3.724315654317726*^9}, {3.724401125752084*^9, 
   3.724401204930243*^9}, {3.724401485877843*^9, 3.7244015500259953`*^9}, {
   3.724401586481325*^9, 3.724401628257326*^9}, {3.724401669817111*^9, 
   3.7244017353651733`*^9}, {3.7244017697548733`*^9, 3.724401919300152*^9}, {
   3.724401963403001*^9, 3.724401997852989*^9}, {3.724402098049164*^9, 
   3.724402100446392*^9}, {3.724402172111514*^9, 3.724402172311459*^9}, {
   3.724402617067031*^9, 3.724402628928084*^9}, {3.724402868241754*^9, 
   3.724402879002273*^9}, {3.724402928309197*^9, 3.724402954114222*^9}, {
   3.724402986732308*^9, 3.724402988530222*^9}, 3.724403552623643*^9, 
   3.7244044201950293`*^9, 3.724404631552376*^9, {3.72440470251363*^9, 
   3.724404705614759*^9}, 3.7245055117879057`*^9, {3.724505615114048*^9, 
   3.724505639574892*^9}, {3.724577922075059*^9, 3.7245779230768833`*^9}, {
   3.7245880860487022`*^9, 3.7245881122486343`*^9}, 3.7246031183486423`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"K", "[", "t_", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"UnitVector", "[", 
        RowBox[{"6", ",", "i"}], "]"}], ".", 
       RowBox[{"Flatten", "[", 
        RowBox[{"ElasticForce", "[", 
         RowBox[{
          RowBox[{"VenantKirchhoffStressDifferential", "[", 
           RowBox[{
            RowBox[{"F", "[", 
             RowBox[{"vA", ",", 
              RowBox[{
               RowBox[{"system", "[", "t", "]"}], "/.", 
               RowBox[{
                RowBox[{"sol", "[", "t", "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}], ",", 
            RowBox[{"F", "[", 
             RowBox[{"vA", ",", 
              RowBox[{"Partition", "[", 
               RowBox[{
                RowBox[{"UnitVector", "[", 
                 RowBox[{"6", ",", "j"}], "]"}], ",", "2"}], "]"}]}], "]"}], 
            ",", "1", ",", "0.33"}], "]"}], ",", "vA"}], "]"}], "]"}]}], ",", 
      
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "6"}], "}"}]}], "]"}], ")"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"V", "[", "t_", "]"}], ":=", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"system", "[", "u", "]"}], "/.", 
      RowBox[{
       RowBox[{"sol", "[", "u", "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ",", "u"}], "]"}], "/.", 
   RowBox[{"u", "\[Rule]", "t"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Det", "[", 
    RowBox[{"eKT", "[", 
     RowBox[{
      RowBox[{"Flatten", "[", "vA", "]"}], ",", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"system", "[", "t", "]"}], "/.", 
        RowBox[{"sol", "[", "t", "]"}]}], "]"}], ",", "1", ",", "0.33"}], 
     "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Flatten", "[", 
     RowBox[{"V", "[", "t", "]"}], "]"}], ".", 
    RowBox[{"K", "[", "t", "]"}], ".", 
    RowBox[{"Flatten", "[", 
     RowBox[{"V", "[", "t", "]"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"K", "[", "1", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"K", "[", "1", "]"}], ".", 
  RowBox[{"Flatten", "[", "dv", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Flatten", "[", 
     RowBox[{"V", "[", "t", "]"}], "]"}], ".", 
    RowBox[{"K", "[", "t", "]"}], ".", 
    RowBox[{"Flatten", "[", 
     RowBox[{"V", "[", "t", "]"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "10", ",", "1"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flatten", "[", "dv", "]"}], ".", 
  RowBox[{"K", "[", "0", "]"}], ".", 
  RowBox[{"Flatten", "[", "dv", "]"}]}]}], "Input",
 CellChangeTimes->{{3.724587566925668*^9, 3.724587567657933*^9}, {
  3.724587931730762*^9, 3.724587981198366*^9}, {3.7245881307089653`*^9, 
  3.724588254002119*^9}, {3.724588290662347*^9, 3.724588340411736*^9}, {
  3.724603208329471*^9, 3.72460321065562*^9}, {3.724604770158698*^9, 
  3.724604789546111*^9}, {3.724605375729631*^9, 3.724605378143161*^9}, {
  3.724605437237157*^9, 3.7246054520643053`*^9}, {3.724605516974687*^9, 
  3.724605521326151*^9}, {3.7246064540689077`*^9, 3.724606470116919*^9}, {
  3.724606592128751*^9, 3.724606595153911*^9}, {3.724606831742937*^9, 
  3.724606849435295*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJwB4QQe+yFib1JlAgAAAE0AAAACAAAAnX5iBjFkiz7ZvjT3bq/IOMTTIExX
IGk/QymkKl4KDLn/xr6DICB5P9ILdAIuK/a4ncCNHwUgiT+basFlnRr3uGw9
dW33H5k/RFmwLVe70DjT+2iU8B+pPxmzyPakVNa4B9viJ+0fuT+3DgqHLpfm
OKHKn3HrH8k/ZH9mjO1dCTmur4nbbC7aPxYv0j5/8744Zz/Rmexy4z+BHDot
E4AaOW7lKeO0ruk/tvv4sATW3bgKIYQn3zjwP2a8HGOVIxG5jhDLKqFg8z+N
7jJX4ngHOWLbVL8DzPY/fiTmg3wg6zhxxYRibyf6P9CWSoibFCG5sXAMUxhJ
/T/mAQvEgnMcuaF7a+owVwBAS8xbbiWzVrmCn/xR9OwBQAcqC124VlS5ANPg
QLx6A0BQ46wVjrRdOSZ0ZnhUKgVAiyYyaxrWarnk9ZdWC70GQM4cUbSHyUK5
SuVqfZJxCEDuVQkZhmUAuU7kkCseHgpAKzgGaulhtTjqw2KAyK0LQAYYQQkV
7ig5LhHWHUNfDUB3/3FNug4jOQo/9WHc8w5AKtir1VxhFTlH7Vr3IlUQQAIn
21+Rrik52MJkAVosEUB0Mbo+9FIPubWIxF4g9RFATzdnW2v44rVmBXXgzs4S
QNstptSgVwA5Y3J7tQyaE0BXss2n78buOC9nK85MYRRAr8od9GZUErnPEiwL
dTkVQJo1oZOxPhS5u66CmywDFkCQR7/ZzvokuXsBKlDM3RZAOg/EnIWEJrkK
3HpIbrQXQLYNDdT/hto45aYhlJ98GEA8ob4zd14cOZQoGQS5VRlAYc7cNLV4
8LiQmmbHYSAaQEPZ5H9EUxG5WpRdzgznGkAra9vj0YHWuPhEpfmfvhtAv4pr
UMib77jj5UJ4woccQPoZP5cimr44oj0xG81hHUCO7PUJqEK2uK2FdRFnLR5A
b4tmpBgX3ziHVWNLA/UeQDRmhqLXJAq5NdyhqYfNH0DTaYE/OvDxuJgpm63N
SyBAiGq7MbIs87h/wI2YS7kgQKigXREtrAI5TRtVpcokIUAKAtZapOAEuUFu
x1sRiSFAXzEo3mPvvjifHGIkzPUhQOCkqN1CcbU4JMOnlk5bIkA58auT5IzT
OJAtwirSviJAwyTYkC8U1jhm8wTRySojQMh0Ouk2rQU5YrHyIImPI0AmSdgc
iZzcuGyCU/xKkSNA9cPOhZ3a3Th1U7TXDJMjQJZsqq+mTOO4iPV1jpCWI0C9
zTwm52qyOK45+fuXnSNAA0OrHSh49zj5wf/WpqsjQAH6tAS/gPO4kNIMjcTH
I0DYj4tnWrnguJqjbWiGySNAUGe383NE4TijdM5DSMsjQIdMHaLqifU4thaQ
+svOI0AJKSoHVb3gONxaE2jT1SNATqxeoVZezjgn4xlD4uMjQPLx9Kz1fea4
MLR6HqTlI0DpuJv12EDwODqF2/ll5yNA7eXjiFFy/7hMJ52w6eojQCUbbEZ9
FOc4cmsgHvHxI0BHzKcI98PWOHw8gfmy8yNAJKsTXSkc5jiFDeLUdPUjQCUt
NQd/0NW4mK+ji/j4I0D5bR89u5j2OKKABGe6+iNAHZR/1a1H1DirUWVCfPwj
QMa1A5n2iNQ4tCLGHT7+I0AXK1DtBz/WuL7zJvn//yNAxIrP7h/V/bj040ea

      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 10}, {-4.1347929595014617`*^-32, 2.2884125349011977`*^-32}},
  
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.724603145926361*^9, 3.7246032110874443`*^9, 3.724603264929318*^9, 
   3.724604791265546*^9, {3.724605381113142*^9, 3.7246054033874273`*^9}, 
   3.72460545305902*^9, 3.724605523992811*^9, 3.724605652775188*^9, 
   3.724606472415721*^9, 3.72460659777838*^9, 3.724606855766831*^9, 
   3.72460722608788*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 10}, {-0.28173752457791684`, 0.03906081450440991}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.724603145926361*^9, 3.7246032110874443`*^9, 3.724603264929318*^9, 
   3.724604791265546*^9, {3.724605381113142*^9, 3.7246054033874273`*^9}, 
   3.72460545305902*^9, 3.724605523992811*^9, 3.724605652775188*^9, 
   3.724606472415721*^9, 3.72460659777838*^9, 3.724606855766831*^9, 
   3.724607237916657*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.6376192504395308`"}], ",", "0.6233904817776168`", ",", 
     "0.006915485152059503`", ",", "0.14055925941959452`", ",", 
     "1.630703765287471`", ",", 
     RowBox[{"-", "0.7639497411972114`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.6233904817776168`", ",", "0.10346941792257347`", ",", 
     RowBox[{"-", "0.04001261187870456`"}], ",", 
     RowBox[{"-", "0.3682062053461955`"}], ",", 
     RowBox[{"-", "0.5833778698989123`"}], ",", "0.2647367874236219`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.006915485152059531`", ",", 
     RowBox[{"-", "0.040012611878704536`"}], ",", "0.024617023236856272`", 
     ",", "0.17493234743682412`", ",", 
     RowBox[{"-", "0.031532508388915775`"}], ",", 
     RowBox[{"-", "0.1349197355581196`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.14055925941959446`", ",", 
     RowBox[{"-", "0.3682062053461954`"}], ",", "0.17493234743682412`", ",", 
     "0.007337585999241003`", ",", 
     RowBox[{"-", "0.31549160685641864`"}], ",", "0.3608686193469545`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.6307037652874712`", ",", 
     RowBox[{"-", "0.5833778698989123`"}], ",", 
     RowBox[{"-", "0.031532508388915775`"}], ",", 
     RowBox[{"-", "0.31549160685641864`"}], ",", 
     RowBox[{"-", "1.5991712568985552`"}], ",", "0.8988694767553309`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.7639497411972113`"}], ",", "0.26473678742362194`", ",", 
     RowBox[{"-", "0.13491973555811956`"}], ",", "0.3608686193469545`", ",", 
     "0.8988694767553309`", ",", 
     RowBox[{"-", "0.6256054067705764`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.724603145926361*^9, 3.7246032110874443`*^9, 3.724603264929318*^9, 
   3.724604791265546*^9, {3.724605381113142*^9, 3.7246054033874273`*^9}, 
   3.72460545305902*^9, 3.724605523992811*^9, 3.724605652775188*^9, 
   3.724606472415721*^9, 3.72460659777838*^9, 3.724606855766831*^9, 
   3.724607237944878*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.6303059669296767`"}], ",", 
   RowBox[{"-", "0.06345680604386911`"}], ",", "0.015395588641848285`", ",", 
   "0.19327385790937135`", ",", "0.6149103782878282`", ",", 
   RowBox[{"-", "0.12981705186550224`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.724603145926361*^9, 3.7246032110874443`*^9, 3.724603264929318*^9, 
   3.724604791265546*^9, {3.724605381113142*^9, 3.7246054033874273`*^9}, 
   3.72460545305902*^9, 3.724605523992811*^9, 3.724605652775188*^9, 
   3.724606472415721*^9, 3.72460659777838*^9, 3.724606855766831*^9, 
   3.724607237946509*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.7420718399894923`*^-40", ",", "0.0390234394350971`", ",", 
   RowBox[{"-", "0.25697631063239146`"}], ",", 
   RowBox[{"-", "0.025589356940977387`"}], ",", 
   RowBox[{"-", "0.01094132698402208`"}], ",", 
   RowBox[{"-", "0.01669506536094111`"}], ",", 
   RowBox[{"-", "0.0006164328853623186`"}], ",", 
   RowBox[{"-", "0.002768899102959548`"}], ",", 
   RowBox[{"-", "0.0011032084663035301`"}], ",", 
   RowBox[{"-", "0.00011232748770023379`"}], ",", 
   RowBox[{"-", "0.00036089063244562126`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.724603145926361*^9, 3.7246032110874443`*^9, 3.724603264929318*^9, 
   3.724604791265546*^9, {3.724605381113142*^9, 3.7246054033874273`*^9}, 
   3.72460545305902*^9, 3.724605523992811*^9, 3.724605652775188*^9, 
   3.724606472415721*^9, 3.72460659777838*^9, 3.724606855766831*^9, 
   3.724607238068323*^9}],

Cell[BoxData[
 RowBox[{"-", "0.17204776647501108`"}]], "Output",
 CellChangeTimes->{
  3.724603145926361*^9, 3.7246032110874443`*^9, 3.724603264929318*^9, 
   3.724604791265546*^9, {3.724605381113142*^9, 3.7246054033874273`*^9}, 
   3.72460545305902*^9, 3.724605523992811*^9, 3.724605652775188*^9, 
   3.724606472415721*^9, 3.72460659777838*^9, 3.724606855766831*^9, 
   3.724607238093207*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"bla", "=", 
   RowBox[{"ScanLine", "[", 
    RowBox[{"\[Alpha]", ",", "vInit", ",", "vA", ",", "1", ",", "0.33"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"en", "=", 
   RowBox[{"bla", "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"den1", "=", 
   RowBox[{"D", "[", 
    RowBox[{"en", ",", "\[Alpha]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"den2", "=", 
   RowBox[{"bla", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{"den2", "/", "den1"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"en", ",", "den1", ",", "den2", ",", 
     RowBox[{"den2", "/", "den1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]", ",", 
     RowBox[{"-", "8"}], ",", "8"}], "}"}]}], "]"}]}], "Input"],

Cell[BoxData["1.`"], "Output",
 CellChangeTimes->{3.724587442667557*^9, 3.724587908054502*^9, 
  3.724603146149701*^9, 3.724603265249291*^9, 3.724605403782099*^9}],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]}, 
     {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
Y9KS1cv1tH1rG/xma0xZGHsVzZ5KpPn6f/no4Ko=
       "]]}, 
     {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwBGIQrWcv9ur/f/kD/8HgvX1Q+9nVxvHyBxgZQOCDffn5
ltz0fXIH/kHl1YJOrBYRkDvAAJW/coX71cFEWbj6ZeeXmMQLyMLVV5yyrf+z
TwauXvZAvoi5DIK/NfsIK/9dKTg/ocfww80mSbh71vSH7fF5KAGX/zGpumO/
vQTcvnMXdC6uniAO5y/muyc546EYXP0cL8Oiy52icPOachIrND1F4Pxq5lXl
RW+FDvyF8hMbzqtcWyEIl5+69+mMOVkCcP/suq/Bs0aJDy6vLODgFDKPG27f
Jq2OrEePOeDu8fgxx5Wnlx2u/v7RjQpmZmxwflLl4pVV31jg5j/VmWq0fxsz
XH916Pwt36KZ4OYL1q0002NkhKsPYp3rFx7PcOAPlK8uqXiWofr/fph6HbP3
Oks//4Hzm13eXthZ8X0/TL9oyLoJkeKf4PKbvh3lP6Hyaj/MfUtvP+192XJv
Pyx8YgNlttxOPgLX33BF44r04Vy4/p1c1VcPlR62h7n/5OZ4l42dV+xh8qaP
GOUaI+7bw8yfXxB3xHb7E7h65Q+7f1odegmX91x886xfxCe4fldfIeavW7/D
5fvjrzcYbP8Dlz/uJ8sbIMToAONHWcx0nRjG5AAz/62iaN2lWcwOv6H6lWK8
S1n/MDtwQ+UBbaaEYg==
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQB2IQrdH9KfS1AIuDAAMIfLAvLdFO7Bdjc2CA8pdpzLtZ
lc/uwAjlX78jEJR2ggPOT6i0ec7uww1Xf1jbvOswKx+cr8a558USDwE4X3ZP
titrhyBcP1+0+XdrUyG4PMMvppVFj4Qc/v0Hgff2//oLw9yNheHq/6g+YJZp
EYar/x64N+6oqgicf9skXlq1RdThP1R/QbiAoNIdMbi85JQnESyyEnD+uugF
yz9XSMLND7et9zixVwrO3xiXq2T1Rxqu/geXM/POUFk4P+iitZnsDDk434FD
cwKfjzycr2cv9ur/fwQfABFjbFA=
       
       "]]}, {}}, {{}, {}, {}, {}, {}, {}}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-8, 8}, {-1.7414405475225236`, 2.6448643285135143`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.724587442667557*^9, 3.724587908054502*^9, 
  3.724603146149701*^9, 3.724603265249291*^9, 3.7246054039298363`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"m", "=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "m", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"m", "=", 
        RowBox[{"RandomInteger", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"6", ",", "6"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"m", "=", 
        RowBox[{"(", 
         RowBox[{"m", "+", 
          RowBox[{"m", "\[Transpose]"}]}], ")"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{"Not", "[", 
          RowBox[{"IndefiniteMatrixQ", "[", "m", "]"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"m", "=", 
           RowBox[{"RandomInteger", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"6", ",", "6"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"m", "=", 
           RowBox[{"(", 
            RowBox[{"m", "+", 
             RowBox[{"m", "\[Transpose]"}]}], ")"}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", "m"}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"b", "=", 
    RowBox[{"RandomInteger", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "10"}], ",", " ", "10"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6", ",", "1"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"Partition", "[", 
    RowBox[{
     RowBox[{"N", "@", 
      RowBox[{"LinearSolve", "[", 
       RowBox[{"m", ",", 
        RowBox[{"Flatten", "[", "b", "]"}]}], "]"}]}], ",", "1"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.724420247256126*^9, 3.7244203949887238`*^9}, {
  3.724420679851178*^9, 3.724420750115427*^9}, {3.724420990280737*^9, 
  3.724421014340879*^9}, {3.724421669830084*^9, 3.7244218166633377`*^9}, {
  3.7244221576329403`*^9, 3.724422199469743*^9}, {3.724432753112061*^9, 
  3.724432809473987*^9}, {3.7244328801842823`*^9, 3.72443288731675*^9}, {
  3.724432923249885*^9, 3.724432969035314*^9}, {3.724433039733892*^9, 
  3.7244330399941072`*^9}, {3.72443319445636*^9, 3.7244332054009447`*^9}, {
  3.724433269680142*^9, 3.72443327818574*^9}, {3.724433308504717*^9, 
  3.724433325011342*^9}, {3.724433470124971*^9, 3.724433473881071*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", "5", ",", "0", ",", 
     RowBox[{"-", "3"}], ",", "3", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "8", ",", "3", ",", "8", ",", "9", ",", 
     RowBox[{"-", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "3", ",", "0", ",", 
     RowBox[{"-", "1"}], ",", "6", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", "8", ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "8"}], ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "9", ",", "6", ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "6"}], ",", 
     RowBox[{"-", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", 
     RowBox[{"-", "2"}], ",", "0", ",", "2", ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "6"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7245874428076897`*^9, 3.724587908407914*^9, 
  3.724603146276671*^9, 3.7246032661945257`*^9, 3.72460540404639*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "10", "}"}], ",", 
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "6"}], "}"}], ",", 
   RowBox[{"{", "3", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7245874428076897`*^9, 3.724587908407914*^9, 
  3.724603146276671*^9, 3.7246032661945257`*^9, 3.7246054040478477`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"-", "15.416210526315789`"}], "}"}], ",", 
   RowBox[{"{", "0.5307368421052632`", "}"}], ",", 
   RowBox[{"{", "6.6284210526315785`", "}"}], ",", 
   RowBox[{"{", "5.378315789473684`", "}"}], ",", 
   RowBox[{"{", "0.2976842105263158`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "4.122105263157895`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7245874428076897`*^9, 3.724587908407914*^9, 
  3.724603146276671*^9, 3.7246032661945257`*^9, 3.7246054040490627`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"m", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"10", ",", "0", ",", "4", ",", 
      RowBox[{"-", "2"}], ",", "1", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "6", ",", "0", ",", "0", ",", "5", ",", "0"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "0", ",", "6", ",", 
      RowBox[{"-", "1"}], ",", 
      RowBox[{"-", "1"}], ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "2"}], ",", "0", ",", 
      RowBox[{"-", "1"}], ",", "10", ",", "5", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "5", ",", 
      RowBox[{"-", "1"}], ",", "5", ",", "10", ",", 
      RowBox[{"-", "1"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "2", ",", "2", ",", 
      RowBox[{"-", "1"}], ",", "6"}], "}"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "4"}], ",", 
     RowBox[{"-", "9"}], ",", 
     RowBox[{"-", "9"}], ",", "10", ",", "3", ",", 
     RowBox[{"-", "9"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"PositiveDefiniteMatrixQ", "[", "m", "]"}], "\[IndentingNewLine]", 
 RowBox[{"N", "@", 
  RowBox[{"Eigenvalues", "[", "m", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CholeskyDecomposition", "[", "m", "]"}], "//", 
  "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{"Partition", "[", 
  RowBox[{"b", ",", "1"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Partition", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"N", "@", 
     RowBox[{"Inverse", "[", "m", "]"}]}], ".", "b"}], ",", "1"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.724420861246602*^9, 3.7244208898017807`*^9}, {
  3.724420981948991*^9, 3.72442098720665*^9}, {3.7244210210635633`*^9, 
  3.724421064646895*^9}, {3.724421228266555*^9, 3.724421228905595*^9}, {
  3.724422174890836*^9, 3.724422191515313*^9}, {3.724422243320801*^9, 
  3.72442232750657*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"10", ",", "0", ",", "4", ",", 
     RowBox[{"-", "2"}], ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "6", ",", "0", ",", "0", ",", "5", ",", "0"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "0", ",", "6", ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "1"}], ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", "0", ",", 
     RowBox[{"-", "1"}], ",", "10", ",", "5", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "5", ",", 
     RowBox[{"-", "1"}], ",", "5", ",", "10", ",", 
     RowBox[{"-", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "2", ",", "2", ",", 
     RowBox[{"-", "1"}], ",", "6"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7244208834206657`*^9, 3.724420890059219*^9}, {
   3.72442103821424*^9, 3.724421065263342*^9}, 3.7244212294218063`*^9, {
   3.724422230476068*^9, 3.724422328108131*^9}, 3.724587442842741*^9, 
   3.7245879084748*^9, 3.724603146308949*^9, 3.724603266419427*^9, 
   3.724605404162867*^9}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.7244208834206657`*^9, 3.724420890059219*^9}, {
   3.72442103821424*^9, 3.724421065263342*^9}, 3.7244212294218063`*^9, {
   3.724422230476068*^9, 3.724422328108131*^9}, 3.724587442842741*^9, 
   3.7245879084748*^9, 3.724603146308949*^9, 3.724603266419427*^9, 
   3.72460540416446*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "16.696905041698212`", ",", "12.907216968527683`", ",", "9.31560881825882`",
    ",", "5.727706260000572`", ",", "2.515949980343302`", ",", 
   "0.8366129311714123`"}], "}"}]], "Output",
 CellChangeTimes->{{3.7244208834206657`*^9, 3.724420890059219*^9}, {
   3.72442103821424*^9, 3.724421065263342*^9}, 3.7244212294218063`*^9, {
   3.724422230476068*^9, 3.724422328108131*^9}, 3.724587442842741*^9, 
   3.7245879084748*^9, 3.724603146308949*^9, 3.724603266419427*^9, 
   3.724605404165653*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      SqrtBox["10"], "0", 
      RowBox[{"2", " ", 
       SqrtBox[
        FractionBox["2", "5"]]}], 
      RowBox[{"-", 
       SqrtBox[
        FractionBox["2", "5"]]}], 
      FractionBox["1", 
       SqrtBox["10"]], "0"},
     {"0", 
      SqrtBox["6"], "0", "0", 
      FractionBox["5", 
       SqrtBox["6"]], "0"},
     {"0", "0", 
      SqrtBox[
       FractionBox["22", "5"]], 
      RowBox[{"-", 
       FractionBox["1", 
        SqrtBox["110"]]}], 
      RowBox[{"-", 
       FractionBox["7", 
        SqrtBox["110"]]}], 
      SqrtBox[
       FractionBox["10", "11"]]},
     {"0", "0", "0", 
      SqrtBox[
       FractionBox["211", "22"]], 
      FractionBox["113", 
       SqrtBox["4642"]], 
      RowBox[{"23", " ", 
       SqrtBox[
        FractionBox["2", "2321"]]}]},
     {"0", "0", "0", "0", 
      SqrtBox[
       FractionBox["1606", "633"]], 
      RowBox[{
       RowBox[{"-", "313"}], " ", 
       SqrtBox[
        FractionBox["3", "338866"]]}]},
     {"0", "0", "0", "0", "0", 
      SqrtBox[
       FractionBox["6051", "1606"]]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.7244208834206657`*^9, 3.724420890059219*^9}, {
   3.72442103821424*^9, 3.724421065263342*^9}, 3.7244212294218063`*^9, {
   3.724422230476068*^9, 3.724422328108131*^9}, 3.724587442842741*^9, 
   3.7245879084748*^9, 3.724603146308949*^9, 3.724603266419427*^9, 
   3.7246054041670094`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"-", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "9"}], "}"}], ",", 
   RowBox[{"{", "10", "}"}], ",", 
   RowBox[{"{", "3", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "9"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7244208834206657`*^9, 3.724420890059219*^9}, {
   3.72442103821424*^9, 3.724421065263342*^9}, 3.7244212294218063`*^9, {
   3.724422230476068*^9, 3.724422328108131*^9}, 3.724587442842741*^9, 
   3.7245879084748*^9, 3.724603146308949*^9, 3.724603266419427*^9, 
   3.7246054041692047`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0.0223103619236492`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "2.056106428689473`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.7844984300115683`"}], "}"}], ",", 
   RowBox[{"{", "0.876218806808792`", "}"}], ",", 
   RowBox[{"{", "0.6673277144273673`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "1.4193521731945138`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7244208834206657`*^9, 3.724420890059219*^9}, {
   3.72442103821424*^9, 3.724421065263342*^9}, 3.7244212294218063`*^9, {
   3.724422230476068*^9, 3.724422328108131*^9}, 3.724587442842741*^9, 
   3.7245879084748*^9, 3.724603146308949*^9, 3.724603266419427*^9, 
   3.7246054041703997`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Det", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"x", "[", 
       RowBox[{"i", ",", "j"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "3"}], "}"}]}], "]"}], "+", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"x", "[", 
       RowBox[{"j", ",", "i"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "3"}], "}"}]}], "]"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.724606510121463*^9, 3.724606573144699*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"x", "[", 
       RowBox[{"2", ",", "3"}], "]"}], "+", 
      RowBox[{"x", "[", 
       RowBox[{"3", ",", "2"}], "]"}]}], ")"}]}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"1", ",", "2"}], "]"}], "+", 
         RowBox[{"x", "[", 
          RowBox[{"2", ",", "1"}], "]"}]}], ")"}]}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"1", ",", "3"}], "]"}], "+", 
        RowBox[{"x", "[", 
         RowBox[{"3", ",", "1"}], "]"}]}], ")"}]}], "+", 
     RowBox[{"2", " ", 
      RowBox[{"x", "[", 
       RowBox[{"1", ",", "1"}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"2", ",", "3"}], "]"}], "+", 
        RowBox[{"x", "[", 
         RowBox[{"3", ",", "2"}], "]"}]}], ")"}]}]}], ")"}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"x", "[", 
      RowBox[{"1", ",", "3"}], "]"}], "+", 
     RowBox[{"x", "[", 
      RowBox[{"3", ",", "1"}], "]"}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", 
      RowBox[{"x", "[", 
       RowBox[{"2", ",", "2"}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"1", ",", "3"}], "]"}], "+", 
        RowBox[{"x", "[", 
         RowBox[{"3", ",", "1"}], "]"}]}], ")"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"1", ",", "2"}], "]"}], "+", 
        RowBox[{"x", "[", 
         RowBox[{"2", ",", "1"}], "]"}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"2", ",", "3"}], "]"}], "+", 
        RowBox[{"x", "[", 
         RowBox[{"3", ",", "2"}], "]"}]}], ")"}]}]}], ")"}]}], "+", 
  RowBox[{"2", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"1", ",", "2"}], "]"}], "+", 
         RowBox[{"x", "[", 
          RowBox[{"2", ",", "1"}], "]"}]}], ")"}], "2"]}], "+", 
     RowBox[{"4", " ", 
      RowBox[{"x", "[", 
       RowBox[{"1", ",", "1"}], "]"}], " ", 
      RowBox[{"x", "[", 
       RowBox[{"2", ",", "2"}], "]"}]}]}], ")"}], " ", 
   RowBox[{"x", "[", 
    RowBox[{"3", ",", "3"}], "]"}]}]}]], "Output",
 CellChangeTimes->{{3.7246065451103153`*^9, 3.724606574009309*^9}}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1032, 1058},
WindowMargins->{{Automatic, 2}, {2, Automatic}},
FrontEndVersion->"11.0 for Linux x86 (64-bit) (July 28, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 214, 3, 30, "Input"],
Cell[CellGroupData[{
Cell[797, 27, 109, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[931, 32, 2878, 97, 350, "Input"],
Cell[3812, 131, 1302, 36, 51, "Output"]
}, Open  ]],
Cell[5129, 170, 1206, 36, 177, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[6360, 210, 644, 15, 72, "Input"],
Cell[7007, 227, 525, 12, 32, "Output"],
Cell[7535, 241, 319, 4, 30, "Output"],
Cell[7857, 247, 323, 4, 30, "Output"]
}, Open  ]],
Cell[8195, 254, 7849, 231, 835, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[16069, 489, 10298, 265, 542, "Input"],
Cell[26370, 756, 1046, 17, 32, "Output"],
Cell[27419, 775, 1047, 17, 32, "Output"],
Cell[28469, 794, 2478, 52, 92, "Output"],
Cell[30950, 848, 1541, 32, 138, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32528, 885, 130, 2, 32, "Input"],
Cell[32661, 889, 185, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32883, 897, 1277, 26, 72, "Input"],
Cell[34163, 925, 635, 15, 32, "Output"],
Cell[34801, 942, 1033, 26, 62, "Output"],
Cell[35837, 970, 1033, 26, 62, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36907, 1001, 2973, 94, 252, "Input"],
Cell[39883, 1097, 356, 9, 32, "Output"],
Cell[40242, 1108, 377, 10, 32, "Output"],
Cell[40622, 1120, 418, 11, 32, "Output"],
Cell[41043, 1133, 159, 2, 30, "Output"],
Cell[41205, 1137, 282, 8, 32, "Output"],
Cell[41490, 1147, 555, 14, 32, "Output"],
Cell[42048, 1163, 552, 14, 32, "Output"],
Cell[42603, 1179, 518, 12, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43158, 1196, 8099, 183, 430, "Input"],
Cell[51260, 1381, 1606, 23, 30, "Output"],
Cell[52869, 1406, 3864, 72, 446, "Output"],
Cell[56736, 1480, 106709, 1758, 447, "Output"]
}, Open  ]],
Cell[163460, 3241, 87, 1, 50, "Input"],
Cell[163550, 3244, 2258, 30, 50, "Input"],
Cell[CellGroupData[{
Cell[165833, 3278, 3714, 98, 257, "Input"],
Cell[169550, 3378, 3493, 72, 197, "Output"],
Cell[173046, 3452, 25909, 438, 221, "Output"],
Cell[198958, 3892, 2049, 45, 132, "Output"],
Cell[201010, 3939, 616, 12, 32, "Output"],
Cell[201629, 3953, 887, 17, 67, "Output"],
Cell[202519, 3972, 393, 7, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[202949, 3984, 938, 27, 132, "Input"],
Cell[203890, 4013, 163, 2, 30, "Output"],
Cell[204056, 4017, 29627, 503, 238, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[233720, 4525, 2613, 66, 250, "Input"],
Cell[236336, 4593, 1077, 30, 52, "Output"],
Cell[237416, 4625, 457, 13, 32, "Output"],
Cell[237876, 4640, 542, 12, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[238455, 4657, 1957, 51, 172, "Input"],
Cell[240415, 4710, 1129, 28, 52, "Output"],
Cell[241547, 4740, 337, 5, 30, "Output"],
Cell[241887, 4747, 535, 10, 32, "Output"],
Cell[242425, 4759, 1923, 63, 317, "Output"],
Cell[244351, 4824, 647, 17, 32, "Output"],
Cell[245001, 4843, 732, 16, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[245770, 4864, 708, 21, 32, "Input"],
Cell[246481, 4887, 2549, 85, 80, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

